{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethers_1 = require(\"ethers\");\n\nvar react_1 = require(\"react\");\n\nexports.ManagerErrorCodes = ['UNEXPECTED_ERROR', 'ALL_CONNECTORS_INVALID'].reduce(function (accumulator, currentValue) {\n  accumulator[currentValue] = currentValue;\n  return accumulator;\n}, {});\nvar unexpectedErrorMessage = 'web3-react encountered an unexpected internal error. See the console for details.';\nvar unexpectedError = Error(unexpectedErrorMessage);\nunexpectedError.code = exports.ManagerErrorCodes.UNEXPECTED_ERROR;\nvar initialWeb3State = {\n  account: undefined,\n  connectorName: undefined,\n  error: null,\n  networkId: undefined,\n  provider: undefined\n};\n\nfunction normalizeAccount(account) {\n  return account === null ? account : ethers_1.ethers.utils.getAddress(account);\n}\n\nfunction useRefId() {\n  var refId = react_1.useRef(0);\n\n  function increment() {\n    refId.current += 1;\n  }\n\n  return [refId, increment];\n}\n\nfunction usePrevious(trackedValue) {\n  var ref = react_1.useRef();\n  react_1.useEffect(function () {\n    ref.current = trackedValue;\n  }, [trackedValue]);\n  return ref.current;\n}\n\nfunction web3StateReducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_CONNECTOR_VALUES':\n      {\n        var _a = action.payload,\n            connectorName = _a.connectorName,\n            provider = _a.provider,\n            networkId = _a.networkId,\n            account = _a.account;\n        return {\n          connectorName: connectorName,\n          provider: provider,\n          networkId: networkId,\n          account: normalizeAccount(account),\n          error: null\n        };\n      }\n\n    case 'UPDATE_NETWORK_ID':\n      {\n        var _b = action.payload,\n            provider = _b.provider,\n            networkId = _b.networkId;\n        return __assign({}, state, {\n          provider: provider || state.provider,\n          networkId: networkId,\n          error: null\n        });\n      }\n\n    case 'UPDATE_ACCOUNT':\n      {\n        var _c = action.payload,\n            provider = _c.provider,\n            account = _c.account;\n        return __assign({}, state, {\n          provider: provider || state.provider,\n          account: normalizeAccount(account),\n          error: null\n        });\n      }\n\n    case 'UPDATE_NETWORK_ID_AND_ACCOUNT':\n      {\n        var _d = action.payload,\n            provider = _d.provider,\n            networkId = _d.networkId,\n            account = _d.account;\n        return __assign({}, state, {\n          provider: provider || state.provider,\n          account: normalizeAccount(account),\n          error: null,\n          networkId: networkId\n        });\n      }\n\n    case 'SET_ERROR':\n      return __assign({}, initialWeb3State, {\n        error: action.payload\n      });\n\n    case 'SET_ERROR_PRESERVE_CONNECTOR_NAME':\n      return __assign({}, initialWeb3State, {\n        connectorName: state.connectorName,\n        error: action.payload\n      });\n\n    case 'SET_ERROR_WITH_CONNECTOR_NAME':\n      {\n        var _e = action.payload,\n            connectorName = _e.connectorName,\n            error = _e.error;\n        return __assign({}, initialWeb3State, {\n          connectorName: connectorName,\n          error: error\n        });\n      }\n\n    case 'RESET':\n      return initialWeb3State;\n\n    default:\n      {\n        // eslint-disable-next-line no-console\n        console.warn('Default case encountered in web3StateReducer. Please file an issue on Github.');\n        return __assign({}, state, {\n          provider: undefined,\n          networkId: undefined,\n          account: undefined,\n          error: unexpectedError\n        });\n      }\n  }\n}\n\nfunction useWeb3Manager(connectors) {\n  var _a = useRefId(),\n      refId = _a[0],\n      incrementRefId = _a[1]; // keep track of web3 state\n\n\n  var _b = react_1.useReducer(web3StateReducer, initialWeb3State),\n      web3State = _b[0],\n      dispatchWeb3State = _b[1];\n\n  var web3Initialized = !!(web3State.account !== undefined && web3State.connectorName && !web3State.error && web3State.provider && web3State.networkId); // keep track of active connector\n\n  var activeConnector = web3State.connectorName ? connectors[web3State.connectorName] : undefined; // function to set the error state.\n\n  function setError(error, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.preserveConnector,\n        preserveConnector = _c === void 0 ? true : _c,\n        connectorName = _b.connectorName;\n\n    if (connectorName) {\n      dispatchWeb3State({\n        type: 'SET_ERROR_WITH_CONNECTOR_NAME',\n        payload: {\n          error: error,\n          connectorName: connectorName\n        }\n      });\n    }\n\n    if (preserveConnector) {\n      dispatchWeb3State({\n        type: 'SET_ERROR_PRESERVE_CONNECTOR_NAME',\n        payload: error\n      });\n    } else {\n      dispatchWeb3State({\n        type: 'SET_ERROR',\n        payload: error\n      });\n    }\n  } // function to set a connector\n\n\n  function setConnector(connectorName, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.suppressAndThrowErrors,\n        suppressAndThrowErrors = _c === void 0 ? false : _c,\n        networkId = _b.networkId;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var callingTimeRefId, validConnectorNames, connector, provider_1, networkIdPromise, accountPromise, error_1;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            callingTimeRefId = refId.current;\n            incrementRefId();\n            validConnectorNames = Object.keys(connectors);\n            connector = connectors[connectorName];\n\n            if (!validConnectorNames.includes(connectorName)) {\n              // eslint-disable-next-line no-console\n              console.warn(\"'\" + connectorName + \"' is not a valid name, please pass one of: \" + validConnectorNames.join(', ') + \".\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (connectorName === web3State.connectorName) {\n              // eslint-disable-next-line no-console\n              console.warn(\"'\" + connectorName + \"' is already set. Calling 'setConnector' for a connector while it is active is a no-op.'\");\n              return [2\n              /*return*/\n              ];\n            }\n\n            _d.label = 1;\n\n          case 1:\n            _d.trys.push([1, 5,, 6]);\n\n            return [4\n            /*yield*/\n            , connector.onActivation()];\n\n          case 2:\n            _d.sent();\n\n            return [4\n            /*yield*/\n            , connector.getProvider(networkId)];\n\n          case 3:\n            provider_1 = _d.sent();\n            networkIdPromise = connector.getNetworkId(provider_1);\n            accountPromise = connector.getAccount(provider_1);\n            return [4\n            /*yield*/\n            , Promise.all([networkIdPromise, accountPromise]).then(function (_a) {\n              var networkId = _a[0],\n                  account = _a[1];\n\n              if (refId.current !== callingTimeRefId + 1) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Silently suppressing status update from stale connector '\" + connectorName + \"'.\");\n                return;\n              }\n\n              dispatchWeb3State({\n                payload: {\n                  connectorName: connectorName,\n                  provider: provider_1,\n                  networkId: networkId,\n                  account: account\n                },\n                type: 'UPDATE_CONNECTOR_VALUES'\n              });\n            })];\n\n          case 4:\n            _d.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 5:\n            error_1 = _d.sent(); // if the component has re-rendered since this function was called, eat the error\n\n            if (refId.current !== callingTimeRefId + 1) {\n              // eslint-disable-next-line no-console\n              console.warn(\"Silently handling error from '\" + connectorName + \"': \" + error_1.toString());\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (suppressAndThrowErrors) {\n              throw error_1;\n            } else {\n              setError(error_1, {\n                connectorName: connectorName\n              });\n            }\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  } // expose a wrapper to set the first valid connector in a list\n\n\n  function setFirstValidConnector(connectorNames, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.suppressAndThrowErrors,\n        suppressAndThrowErrors = _c === void 0 ? false : _c,\n        _d = _b.networkIds,\n        networkIds = _d === void 0 ? [] : _d;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var _i, connectorNames_1, connectorName, error_2, error_3;\n\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            _i = 0, connectorNames_1 = connectorNames;\n            _e.label = 1;\n\n          case 1:\n            if (!(_i < connectorNames_1.length)) return [3\n            /*break*/\n            , 6];\n            connectorName = connectorNames_1[_i];\n            _e.label = 2;\n\n          case 2:\n            _e.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , setConnector(connectorName, {\n              suppressAndThrowErrors: true,\n              networkId: networkIds[connectorNames.indexOf(connectorName)]\n            })];\n\n          case 3:\n            _e.sent();\n\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            error_2 = _e.sent();\n\n            if (connectorName === connectorNames[connectorNames.length - 1]) {\n              error_3 = Error('Unable to set any valid connector.');\n              error_3.code = exports.ManagerErrorCodes.ALL_CONNECTORS_INVALID;\n\n              if (suppressAndThrowErrors) {\n                throw error_3;\n              } else {\n                setError(error_3);\n              }\n            }\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 6:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  } // function to unset the current connector\n\n\n  function unsetConnector() {\n    dispatchWeb3State({\n      type: 'RESET'\n    });\n  }\n\n  var lastConnector = usePrevious(activeConnector);\n  react_1.useEffect(function () {\n    if (activeConnector === undefined && lastConnector !== undefined) {\n      lastConnector.onDeactivation(web3State.error);\n    }\n  }, [activeConnector, lastConnector, web3State.error]);\n\n  function web3ReactUpdateHandler(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.updateNetworkId,\n        updateNetworkId = _c === void 0 ? false : _c,\n        _d = _b.updateAccount,\n        updateAccount = _d === void 0 ? false : _d,\n        _e = _b.overrideNetworkIdCheck,\n        overrideNetworkIdCheck = _e === void 0 ? false : _e,\n        _f = _b.overrideAccountCheck,\n        overrideAccountCheck = _f === void 0 ? false : _f,\n        networkId = _b.networkId,\n        account = _b.account;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var fetchNewProvider_1, provider_2, fetchNewNetworkId_1, networkIdPromise, fetchNewAccount_1, accountPromise, error_4;\n      return __generator(this, function (_g) {\n        switch (_g.label) {\n          case 0:\n            if (!activeConnector) {\n              // eslint-disable-next-line no-console\n              console.warn('No active connector in web3ReactUpdateHandler call. Please file an issue on Github.');\n              setError(unexpectedError);\n              return [2\n              /*return*/\n              ];\n            }\n\n            if (!updateNetworkId && !updateAccount || updateNetworkId && overrideNetworkIdCheck && !networkId || updateAccount && overrideAccountCheck && !account) {\n              console.warn('Malformed parameters passed to web3ReactUpdateHandler.'); // eslint-disable-line no-console\n\n              setError(unexpectedError);\n              return [2\n              /*return*/\n              ];\n            } // no checks required\n\n\n            if ((!updateNetworkId || updateNetworkId && overrideNetworkIdCheck) && (!updateAccount || updateAccount && overrideAccountCheck)) {\n              if (updateNetworkId && !updateAccount) {\n                dispatchWeb3State({\n                  payload: {\n                    networkId: networkId\n                  },\n                  type: 'UPDATE_NETWORK_ID'\n                });\n              } else if (!updateNetworkId && updateAccount) {\n                dispatchWeb3State({\n                  payload: {\n                    account: account\n                  },\n                  type: 'UPDATE_ACCOUNT'\n                });\n              } else {\n                dispatchWeb3State({\n                  payload: {\n                    networkId: networkId,\n                    account: account\n                  },\n                  type: 'UPDATE_NETWORK_ID_AND_ACCOUNT'\n                });\n              }\n\n              return [2\n              /*return*/\n              ];\n            }\n\n            _g.label = 1;\n\n          case 1:\n            _g.trys.push([1, 4,, 5]);\n\n            fetchNewProvider_1 = !web3State.provider || updateNetworkId && !overrideNetworkIdCheck;\n            return [4\n            /*yield*/\n            , fetchNewProvider_1 ? activeConnector.getProvider(networkId) : web3State.provider];\n\n          case 2:\n            provider_2 = _g.sent();\n            fetchNewNetworkId_1 = web3State.networkId === undefined || updateNetworkId && !overrideNetworkIdCheck;\n            networkIdPromise = web3State.networkId === undefined || fetchNewNetworkId_1 ? activeConnector.getNetworkId(provider_2) : web3State.networkId;\n            fetchNewAccount_1 = web3State.account === undefined || updateAccount && !overrideAccountCheck;\n            accountPromise = web3State.account === undefined || fetchNewAccount_1 ? activeConnector.getAccount(provider_2) : web3State.account;\n            return [4\n            /*yield*/\n            , Promise.all([networkIdPromise, accountPromise]).then(function (_a) {\n              var returnedNetworkId = _a[0],\n                  returnedAccount = _a[1];\n\n              if (updateNetworkId && networkId && networkId !== returnedNetworkId) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Mismatched networkIds in web3ReactUpdateHandler: \" + networkId + \" and \" + returnedNetworkId + \".\");\n                throw unexpectedError;\n              }\n\n              if (updateAccount && account && normalizeAccount(account) !== normalizeAccount(returnedAccount)) {\n                // eslint-disable-next-line no-console\n                console.warn(\"Mismatched accounts in web3ReactUpdateHandler: \" + normalizeAccount(account) + \" and \" + normalizeAccount(returnedAccount) + \".\");\n                throw unexpectedError;\n              }\n\n              if (fetchNewNetworkId_1 && !fetchNewAccount_1) {\n                dispatchWeb3State({\n                  payload: {\n                    provider: fetchNewProvider_1 ? provider_2 : undefined,\n                    networkId: returnedNetworkId\n                  },\n                  type: 'UPDATE_NETWORK_ID'\n                });\n              } else if (!fetchNewNetworkId_1 && fetchNewAccount_1) {\n                dispatchWeb3State({\n                  payload: {\n                    provider: fetchNewProvider_1 ? provider_2 : undefined,\n                    account: returnedAccount\n                  },\n                  type: 'UPDATE_ACCOUNT'\n                });\n              } else {\n                dispatchWeb3State({\n                  payload: {\n                    provider: fetchNewProvider_1 ? provider_2 : undefined,\n                    networkId: returnedNetworkId,\n                    account: returnedAccount\n                  },\n                  type: 'UPDATE_NETWORK_ID_AND_ACCOUNT'\n                });\n              }\n            })];\n\n          case 3:\n            _g.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            error_4 = _g.sent();\n            setError(error_4);\n            return [3\n            /*break*/\n            , 5];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }\n\n  function web3ReactErrorHandler(error, preserveConnector) {\n    if (preserveConnector === void 0) {\n      preserveConnector = true;\n    }\n\n    setError(error, {\n      preserveConnector: preserveConnector\n    });\n  }\n\n  function web3ReactResetHandler() {\n    unsetConnector();\n  }\n\n  react_1.useEffect(function () {\n    if (activeConnector) {\n      activeConnector.on('_web3ReactUpdate', web3ReactUpdateHandler);\n      activeConnector.on('_web3ReactError', web3ReactErrorHandler);\n      activeConnector.on('_web3ReactReset', web3ReactResetHandler);\n    }\n\n    return function () {\n      if (activeConnector) {\n        activeConnector.removeListener('_web3ReactUpdate', web3ReactUpdateHandler);\n        activeConnector.removeListener('_web3ReactError', web3ReactErrorHandler);\n        activeConnector.removeListener('_web3ReactReset', web3ReactResetHandler);\n      }\n    };\n  });\n  return {\n    web3Initialized: web3Initialized,\n    web3State: web3State,\n    connector: activeConnector,\n    setConnector: setConnector,\n    setFirstValidConnector: setFirstValidConnector,\n    unsetConnector: unsetConnector,\n    setError: setError\n  };\n}\n\nexports.default = useWeb3Manager;","map":{"version":3,"mappings":"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","names":["exports","reduce","accumulator","currentValue","unexpectedErrorMessage","unexpectedError","Error","code","UNEXPECTED_ERROR","initialWeb3State","account","undefined","connectorName","error","networkId","provider","normalizeAccount","ethers_1","utils","getAddress","useRefId","refId","react_1","increment","current","usePrevious","trackedValue","ref","web3StateReducer","state","action","type","payload","console","warn","useWeb3Manager","connectors","incrementRefId","web3State","dispatchWeb3State","web3Initialized","activeConnector","setError","_a","_b","_c","preserveConnector","setConnector","suppressAndThrowErrors","callingTimeRefId","validConnectorNames","Object","keys","connector","includes","join","onActivation","_d","getProvider","provider_1","networkIdPromise","getNetworkId","accountPromise","getAccount","Promise","all","then","error_1","toString","setFirstValidConnector","connectorNames","networkIds","connectorNames_1","_i","indexOf","_e","length","error_3","ALL_CONNECTORS_INVALID","unsetConnector","lastConnector","onDeactivation","web3ReactUpdateHandler","updateNetworkId","updateAccount","overrideNetworkIdCheck","_f","overrideAccountCheck","fetchNewProvider_1","provider_2","_g","fetchNewNetworkId_1","fetchNewAccount_1","returnedNetworkId","returnedAccount","error_4","web3ReactErrorHandler","web3ReactResetHandler","on","removeListener"],"sources":["../src/manager.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}