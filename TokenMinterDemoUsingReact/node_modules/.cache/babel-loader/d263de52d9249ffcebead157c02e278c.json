{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar DEFAULT_ADDRESS_SEARCH_LIMIT = 1000;\n\nvar DerivedHDKeyInfoIterator =\n/** @class */\nfunction () {\n  function DerivedHDKeyInfoIterator(initialDerivedKey, searchLimit) {\n    if (searchLimit === void 0) {\n      searchLimit = DEFAULT_ADDRESS_SEARCH_LIMIT;\n    }\n\n    this._searchLimit = searchLimit;\n    this._parentDerivedKeyInfo = initialDerivedKey;\n    this._index = 0;\n  }\n\n  DerivedHDKeyInfoIterator.prototype.next = function () {\n    var baseDerivationPath = this._parentDerivedKeyInfo.baseDerivationPath;\n    var derivationIndex = this._index;\n    var fullDerivationPath = \"m/\" + baseDerivationPath + \"/\" + derivationIndex;\n    var path = \"m/\" + derivationIndex;\n\n    var hdKey = this._parentDerivedKeyInfo.hdKey.derive(path);\n\n    var address = exports.walletUtils.addressOfHDKey(hdKey);\n    var derivedKey = {\n      address: address,\n      hdKey: hdKey,\n      baseDerivationPath: baseDerivationPath,\n      derivationPath: fullDerivationPath\n    };\n    var isDone = this._index === this._searchLimit;\n    this._index++;\n    return {\n      done: isDone,\n      value: derivedKey\n    };\n  };\n\n  DerivedHDKeyInfoIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n  return DerivedHDKeyInfoIterator;\n}();\n\nexports.walletUtils = {\n  calculateDerivedHDKeyInfos: function (parentDerivedKeyInfo, numberOfKeys) {\n    var e_1, _a;\n\n    var derivedKeys = [];\n    var derivedKeyIterator = new DerivedHDKeyInfoIterator(parentDerivedKeyInfo, numberOfKeys);\n\n    try {\n      for (var derivedKeyIterator_1 = __values(derivedKeyIterator), derivedKeyIterator_1_1 = derivedKeyIterator_1.next(); !derivedKeyIterator_1_1.done; derivedKeyIterator_1_1 = derivedKeyIterator_1.next()) {\n        var key = derivedKeyIterator_1_1.value;\n        derivedKeys.push(key);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (derivedKeyIterator_1_1 && !derivedKeyIterator_1_1.done && (_a = derivedKeyIterator_1.return)) _a.call(derivedKeyIterator_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return derivedKeys;\n  },\n  findDerivedKeyInfoForAddressIfExists: function (address, parentDerivedKeyInfo, searchLimit) {\n    var e_2, _a;\n\n    var lowercaseAddress = address.toLowerCase();\n    var matchedKey;\n    var derivedKeyIterator = new DerivedHDKeyInfoIterator(parentDerivedKeyInfo, searchLimit);\n\n    try {\n      for (var derivedKeyIterator_2 = __values(derivedKeyIterator), derivedKeyIterator_2_1 = derivedKeyIterator_2.next(); !derivedKeyIterator_2_1.done; derivedKeyIterator_2_1 = derivedKeyIterator_2.next()) {\n        var key = derivedKeyIterator_2_1.value;\n\n        if (key.address === lowercaseAddress) {\n          matchedKey = key;\n          break;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (derivedKeyIterator_2_1 && !derivedKeyIterator_2_1.done && (_a = derivedKeyIterator_2.return)) _a.call(derivedKeyIterator_2);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return matchedKey;\n  },\n  addressOfHDKey: function (hdKey) {\n    var shouldSanitizePublicKey = true;\n    var derivedPublicKey = hdKey.publicKey;\n    var ethereumAddressUnprefixed = ethUtil.publicToAddress(derivedPublicKey, shouldSanitizePublicKey).toString('hex');\n    var address = ethUtil.addHexPrefix(ethereumAddressUnprefixed).toLowerCase();\n    return address;\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAKA,IAAMA,4BAA4B,GAAG,IAArC;;AAEA;AAAA;AAAA;EAKI,kCAAYC,iBAAZ,EAAiDC,WAAjD,EAAmG;IAAlD;MAAAA;IAAkD;;IAC/F,KAAKC,YAAL,GAAoBD,WAApB;IACA,KAAKE,qBAAL,GAA6BH,iBAA7B;IACA,KAAKI,MAAL,GAAc,CAAd;EACH;;EAEMC,0CAAP;IACI,IAAMC,kBAAkB,GAAG,KAAKH,qBAAL,CAA2BG,kBAAtD;IACA,IAAMC,eAAe,GAAG,KAAKH,MAA7B;IACA,IAAMI,kBAAkB,GAAG,OAAKF,kBAAL,GAAuB,GAAvB,GAA2BC,eAAtD;IACA,IAAME,IAAI,GAAG,OAAKF,eAAlB;;IACA,IAAMG,KAAK,GAAG,KAAKP,qBAAL,CAA2BO,KAA3B,CAAiCC,MAAjC,CAAwCF,IAAxC,CAAd;;IACA,IAAMG,OAAO,GAAGC,oBAAYC,cAAZ,CAA2BJ,KAA3B,CAAhB;IACA,IAAMK,UAAU,GAAqB;MACjCH,OAAO,SAD0B;MAEjCF,KAAK,OAF4B;MAGjCJ,kBAAkB,oBAHe;MAIjCU,cAAc,EAAER;IAJiB,CAArC;IAMA,IAAMS,MAAM,GAAG,KAAKb,MAAL,KAAgB,KAAKF,YAApC;IACA,KAAKE,MAAL;IACA,OAAO;MACHc,IAAI,EAAED,MADH;MAEHE,KAAK,EAAEJ;IAFJ,CAAP;EAIH,CAnBM;;EAqBAV,mCAACe,MAAM,CAACC,QAAR,IAAP;IACI,OAAO,IAAP;EACH,CAFM;;EAGX;AAAC,CAnCD;;AAqCaR,sBAAc;EACvBS,0BAA0B,EAA1B,UAA2BC,oBAA3B,EAAmEC,YAAnE,EAAuF;;;IACnF,IAAMC,WAAW,GAAuB,EAAxC;IACA,IAAMC,kBAAkB,GAAG,IAAIrB,wBAAJ,CAA6BkB,oBAA7B,EAAmDC,YAAnD,CAA3B;;;MACA,KAAkB,yDAAkBG,oDAApC,EAAoC,4BAApC,EAAoCA,oDAApC,EAAsC;QAAjC,IAAMC,GAAG,+BAAT;QACDH,WAAW,CAACI,IAAZ,CAAiBD,GAAjB;MACH;;;;;;;;;;;;;IACD,OAAOH,WAAP;EACH,CARsB;EASvBK,oCAAoC,EAApC,UACIlB,OADJ,EAEIW,oBAFJ,EAGItB,WAHJ,EAGuB;;;IAEnB,IAAM8B,gBAAgB,GAAGnB,OAAO,CAACoB,WAAR,EAAzB;IACA,IAAIC,UAAJ;IACA,IAAMP,kBAAkB,GAAG,IAAIrB,wBAAJ,CAA6BkB,oBAA7B,EAAmDtB,WAAnD,CAA3B;;;MACA,KAAkB,yDAAkBiC,oDAApC,EAAoC,4BAApC,EAAoCA,oDAApC,EAAsC;QAAjC,IAAMN,GAAG,+BAAT;;QACD,IAAIA,GAAG,CAAChB,OAAJ,KAAgBmB,gBAApB,EAAsC;UAClCE,UAAU,GAAGL,GAAb;UACA;QACH;MACJ;;;;;;;;;;;;;IACD,OAAOK,UAAP;EACH,CAxBsB;EAyBvBnB,cAAc,EAAd,UAAeJ,KAAf,EAA4B;IACxB,IAAMyB,uBAAuB,GAAG,IAAhC;IACA,IAAMC,gBAAgB,GAAG1B,KAAK,CAAC2B,SAA/B;IACA,IAAMC,yBAAyB,GAAGC,OAAO,CACpCC,eAD6B,CACbJ,gBADa,EACKD,uBADL,EAE7BM,QAF6B,CAEpB,KAFoB,CAAlC;IAGA,IAAM7B,OAAO,GAAG2B,OAAO,CAACG,YAAR,CAAqBJ,yBAArB,EAAgDN,WAAhD,EAAhB;IACA,OAAOpB,OAAP;EACH;AAjCsB,CAAd","names":["DEFAULT_ADDRESS_SEARCH_LIMIT","initialDerivedKey","searchLimit","_searchLimit","_parentDerivedKeyInfo","_index","DerivedHDKeyInfoIterator","baseDerivationPath","derivationIndex","fullDerivationPath","path","hdKey","derive","address","exports","addressOfHDKey","derivedKey","derivationPath","isDone","done","value","Symbol","iterator","calculateDerivedHDKeyInfos","parentDerivedKeyInfo","numberOfKeys","derivedKeys","derivedKeyIterator","derivedKeyIterator_1_1","key","push","findDerivedKeyInfoForAddressIfExists","lowercaseAddress","toLowerCase","matchedKey","derivedKeyIterator_2_1","shouldSanitizePublicKey","derivedPublicKey","publicKey","ethereumAddressUnprefixed","ethUtil","publicToAddress","toString","addHexPrefix"],"sources":["../../../src/utils/wallet_utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}