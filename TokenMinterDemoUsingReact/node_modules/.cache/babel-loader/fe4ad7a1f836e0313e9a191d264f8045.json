{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar ethers = require(\"ethers\");\n\nvar configured_bignumber_1 = require(\"./configured_bignumber\");\n\nexports.signTypedDataUtils = {\n  /**\n   * Generates the EIP712 Typed Data hash for signing\n   * @param   typedData An object that conforms to the EIP712TypedData interface\n   * @return  A Buffer containing the hash of the typed data.\n   */\n  generateTypedDataHash: function (typedData) {\n    return ethUtil.sha3(Buffer.concat([Buffer.from('1901', 'hex'), exports.signTypedDataUtils._structHash('EIP712Domain', typedData.domain, typedData.types), exports.signTypedDataUtils._structHash(typedData.primaryType, typedData.message, typedData.types)]));\n  },\n  _findDependencies: function (primaryType, types, found) {\n    if (found === void 0) {\n      found = [];\n    }\n\n    var e_1, _a, e_2, _b;\n\n    if (found.includes(primaryType) || types[primaryType] === undefined) {\n      return found;\n    }\n\n    found.push(primaryType);\n\n    try {\n      for (var _c = __values(types[primaryType]), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var field = _d.value;\n\n        try {\n          for (var _e = __values(exports.signTypedDataUtils._findDependencies(field.type, types, found)), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var dep = _f.value;\n\n            if (!found.includes(dep)) {\n              found.push(dep);\n            }\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return found;\n  },\n  _encodeType: function (primaryType, types) {\n    var e_3, _a;\n\n    var deps = exports.signTypedDataUtils._findDependencies(primaryType, types);\n\n    deps = deps.filter(function (d) {\n      return d !== primaryType;\n    });\n    deps = [primaryType].concat(deps.sort());\n    var result = '';\n\n    try {\n      for (var deps_1 = __values(deps), deps_1_1 = deps_1.next(); !deps_1_1.done; deps_1_1 = deps_1.next()) {\n        var dep = deps_1_1.value;\n        result += dep + \"(\" + types[dep].map(function (_a) {\n          var name = _a.name,\n              type = _a.type;\n          return type + \" \" + name;\n        }).join(',') + \")\";\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (deps_1_1 && !deps_1_1.done && (_a = deps_1.return)) _a.call(deps_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  },\n  _encodeData: function (primaryType, data, types) {\n    var e_4, _a;\n\n    var encodedTypes = ['bytes32'];\n    var encodedValues = [exports.signTypedDataUtils._typeHash(primaryType, types)];\n\n    try {\n      for (var _b = __values(types[primaryType]), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var field = _c.value;\n        var value = data[field.name];\n\n        if (field.type === 'string' || field.type === 'bytes') {\n          var hashValue = ethUtil.sha3(value);\n          encodedTypes.push('bytes32');\n          encodedValues.push(hashValue);\n        } else if (types[field.type] !== undefined) {\n          encodedTypes.push('bytes32');\n          var hashValue = ethUtil.sha3( // tslint:disable-next-line:no-unnecessary-type-assertion\n          exports.signTypedDataUtils._encodeData(field.type, value, types));\n          encodedValues.push(hashValue);\n        } else if (field.type.lastIndexOf(']') === field.type.length - 1) {\n          throw new Error('Arrays currently unimplemented in encodeData');\n        } else {\n          encodedTypes.push(field.type);\n\n          var normalizedValue = exports.signTypedDataUtils._normalizeValue(field.type, value);\n\n          encodedValues.push(normalizedValue);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return ethers.utils.defaultAbiCoder.encode(encodedTypes, encodedValues);\n  },\n  _normalizeValue: function (type, value) {\n    var normalizedValue = type === 'uint256' && configured_bignumber_1.BigNumber.isBigNumber(value) ? value.toString() : value;\n    return normalizedValue;\n  },\n  _typeHash: function (primaryType, types) {\n    return ethUtil.sha3(exports.signTypedDataUtils._encodeType(primaryType, types));\n  },\n  _structHash: function (primaryType, data, types) {\n    return ethUtil.sha3(exports.signTypedDataUtils._encodeData(primaryType, data, types));\n  }\n};","map":{"version":3,"mappings":"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","names":["exports","generateTypedDataHash","typedData","ethUtil","sha3","Buffer","concat","from","_structHash","domain","types","primaryType","message","_findDependencies","found","includes","undefined","push","_d","field","type","_f","dep","_encodeType","deps","filter","sort","result","deps_1_1","map","_a","name","join","_encodeData","data","encodedTypes","encodedValues","_typeHash","_c","value","hashValue","lastIndexOf","length","Error","normalizedValue","_normalizeValue","ethers","utils","defaultAbiCoder","encode","configured_bignumber_1","isBigNumber","toString"],"sources":["../../src/sign_typed_data_utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}