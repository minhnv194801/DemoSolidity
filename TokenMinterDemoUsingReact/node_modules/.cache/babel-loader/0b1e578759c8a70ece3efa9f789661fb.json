{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nexports.constants = {\n  EVM_WORD_WIDTH_IN_BYTES: 32,\n  EVM_WORD_WIDTH_IN_BITS: 256,\n  HEX_BASE: 16,\n  DEC_BASE: 10,\n  BIN_BASE: 2,\n  HEX_SELECTOR_LENGTH_IN_CHARS: 10,\n  HEX_SELECTOR_LENGTH_IN_BYTES: 4,\n  HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA: 0,\n  // Disable no-object-literal-type-assertion so we can enforce cast\n\n  /* tslint:disable no-object-literal-type-assertion */\n  DEFAULT_DECODING_RULES: {\n    shouldConvertStructsToObjects: true\n  },\n  DEFAULT_ENCODING_RULES: {\n    shouldOptimize: true,\n    shouldAnnotate: false\n  },\n\n  /* tslint:enable no-object-literal-type-assertion */\n  EMPTY_EVM_WORD_STRING: '0x0000000000000000000000000000000000000000000000000000000000000000',\n  EMPTY_EVM_WORD_BUFFER: ethUtil.toBuffer('0x0000000000000000000000000000000000000000000000000000000000000000'),\n  NUMBER_OF_BYTES_IN_UINT8: 8,\n  NUMBER_OF_BYTES_IN_INT8: 8\n};","map":{"version":3,"mappings":";;;;;;AAAA;;AAIaA,oBAAY;EACrBC,uBAAuB,EAAE,EADJ;EAErBC,sBAAsB,EAAE,GAFH;EAGrBC,QAAQ,EAAE,EAHW;EAIrBC,QAAQ,EAAE,EAJW;EAKrBC,QAAQ,EAAE,CALW;EAMrBC,4BAA4B,EAAE,EANT;EAOrBC,4BAA4B,EAAE,CAPT;EAQrBC,oCAAoC,EAAE,CARjB;EASrB;;EACA;EACAC,sBAAsB,EAAE;IAAEC,6BAA6B,EAAE;EAAjC,CAXH;EAYrBC,sBAAsB,EAAE;IAAEC,cAAc,EAAE,IAAlB;IAAwBC,cAAc,EAAE;EAAxC,CAZH;;EAarB;EACAC,qBAAqB,EAAE,oEAdF;EAerBC,qBAAqB,EAAEC,OAAO,CAACC,QAAR,CAAiB,oEAAjB,CAfF;EAgBrBC,wBAAwB,EAAE,CAhBL;EAiBrBC,uBAAuB,EAAE;AAjBJ,CAAZ","names":["exports","EVM_WORD_WIDTH_IN_BYTES","EVM_WORD_WIDTH_IN_BITS","HEX_BASE","DEC_BASE","BIN_BASE","HEX_SELECTOR_LENGTH_IN_CHARS","HEX_SELECTOR_LENGTH_IN_BYTES","HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA","DEFAULT_DECODING_RULES","shouldConvertStructsToObjects","DEFAULT_ENCODING_RULES","shouldOptimize","shouldAnnotate","EMPTY_EVM_WORD_STRING","EMPTY_EVM_WORD_BUFFER","ethUtil","toBuffer","NUMBER_OF_BYTES_IN_UINT8","NUMBER_OF_BYTES_IN_INT8"],"sources":["../../../../src/abi_encoder/utils/constants.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}