{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nexports.constants = {\n  EVM_WORD_WIDTH_IN_BYTES: 32,\n  EVM_WORD_WIDTH_IN_BITS: 256,\n  HEX_BASE: 16,\n  DEC_BASE: 10,\n  BIN_BASE: 2,\n  HEX_SELECTOR_LENGTH_IN_CHARS: 10,\n  HEX_SELECTOR_LENGTH_IN_BYTES: 4,\n  HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA: 0,\n  // Disable no-object-literal-type-assertion so we can enforce cast\n\n  /* tslint:disable no-object-literal-type-assertion */\n  DEFAULT_DECODING_RULES: {\n    shouldConvertStructsToObjects: true\n  },\n  DEFAULT_ENCODING_RULES: {\n    shouldOptimize: true,\n    shouldAnnotate: false\n  },\n\n  /* tslint:enable no-object-literal-type-assertion */\n  EMPTY_EVM_WORD_STRING: '0x0000000000000000000000000000000000000000000000000000000000000000',\n  EMPTY_EVM_WORD_BUFFER: ethUtil.toBuffer('0x0000000000000000000000000000000000000000000000000000000000000000'),\n  NUMBER_OF_BYTES_IN_UINT8: 8,\n  NUMBER_OF_BYTES_IN_INT8: 8\n};","map":{"version":3,"sources":["../../../../src/abi_encoder/utils/constants.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAIa,OAAA,CAAA,SAAA,GAAY;EACrB,uBAAuB,EAAE,EADJ;EAErB,sBAAsB,EAAE,GAFH;EAGrB,QAAQ,EAAE,EAHW;EAIrB,QAAQ,EAAE,EAJW;EAKrB,QAAQ,EAAE,CALW;EAMrB,4BAA4B,EAAE,EANT;EAOrB,4BAA4B,EAAE,CAPT;EAQrB,oCAAoC,EAAE,CARjB;EASrB;;EACA;EACA,sBAAsB,EAAE;IAAE,6BAA6B,EAAE;EAAjC,CAXH;EAYrB,sBAAsB,EAAE;IAAE,cAAc,EAAE,IAAlB;IAAwB,cAAc,EAAE;EAAxC,CAZH;;EAarB;EACA,qBAAqB,EAAE,oEAdF;EAerB,qBAAqB,EAAE,OAAO,CAAC,QAAR,CAAiB,oEAAjB,CAfF;EAgBrB,wBAAwB,EAAE,CAhBL;EAiBrB,uBAAuB,EAAE;AAjBJ,CAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethUtil = require(\"ethereumjs-util\");\nexports.constants = {\n    EVM_WORD_WIDTH_IN_BYTES: 32,\n    EVM_WORD_WIDTH_IN_BITS: 256,\n    HEX_BASE: 16,\n    DEC_BASE: 10,\n    BIN_BASE: 2,\n    HEX_SELECTOR_LENGTH_IN_CHARS: 10,\n    HEX_SELECTOR_LENGTH_IN_BYTES: 4,\n    HEX_SELECTOR_BYTE_OFFSET_IN_CALLDATA: 0,\n    // Disable no-object-literal-type-assertion so we can enforce cast\n    /* tslint:disable no-object-literal-type-assertion */\n    DEFAULT_DECODING_RULES: { shouldConvertStructsToObjects: true },\n    DEFAULT_ENCODING_RULES: { shouldOptimize: true, shouldAnnotate: false },\n    /* tslint:enable no-object-literal-type-assertion */\n    EMPTY_EVM_WORD_STRING: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    EMPTY_EVM_WORD_BUFFER: ethUtil.toBuffer('0x0000000000000000000000000000000000000000000000000000000000000000'),\n    NUMBER_OF_BYTES_IN_UINT8: 8,\n    NUMBER_OF_BYTES_IN_INT8: 8,\n};\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"script"}