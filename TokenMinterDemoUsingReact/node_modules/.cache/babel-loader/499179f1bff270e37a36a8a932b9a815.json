{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chalk_1 = require(\"chalk\");\n\nvar _ = require(\"lodash\");\n\nvar DEFAULT_TERMINAL_WIDTH = 80;\nvar TERMINAL_WIDTH = _.get(process, 'stdout.columns') || DEFAULT_TERMINAL_WIDTH;\nexports.logUtils = {\n  log: function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    console.log.apply(console, __spread(args)); // tslint:disable-line:no-console\n  },\n  header: function (text, padStr) {\n    if (padStr === void 0) {\n      padStr = '=';\n    }\n\n    var padLength = TERMINAL_WIDTH - text.length;\n    var padLengthEnd = (padLength + 1) / 2;\n    var leftPadded = text.padStart(TERMINAL_WIDTH - padLengthEnd, padStr);\n    var padded = leftPadded.padEnd(TERMINAL_WIDTH, padStr);\n    console.log(padded); // tslint:disable-line:no-console\n  },\n  warn: function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    console.warn.apply(console, __spread(args)); // tslint:disable-line:no-console\n  },\n  table: function (columnarData) {\n    var formattedColumnarData = _.mapValues(columnarData, function (columnOrColumns, _rowName) {\n      return _.isNumber(columnOrColumns) ? columnOrColumns.toLocaleString() : columnOrColumns;\n    });\n\n    console.table(formattedColumnarData); // tslint:disable-line:no-console\n  },\n  logWithTime: function (arg) {\n    exports.logUtils.log(\"[\" + chalk_1.default.gray(new Date().toLocaleTimeString()) + \"] \" + arg);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,sBAAsB,GAAG,EAA/B;AACA,IAAMC,cAAc,GAAGC,CAAC,CAACC,GAAF,CAAMC,OAAN,EAAe,gBAAf,KAAoCJ,sBAA3D;AAEaK,mBAAW;EACpBC,GAAG,EAAH;IAAI;;SAAA,yCAAc;MAAdC;;;IACAC,OAAO,CAACF,GAAR,CAAWG,KAAX,UAAOC,SAAQH,IAAR,CAAP,EADJ,CAC0B;EACzB,CAHmB;EAIpBI,MAAM,EAAN,UAAOC,IAAP,EAAqBC,MAArB,EAAyC;IAApB;MAAAA;IAAoB;;IACrC,IAAMC,SAAS,GAAGb,cAAc,GAAGW,IAAI,CAACG,MAAxC;IACA,IAAMC,YAAY,GAAG,CAACF,SAAS,GAAG,CAAb,IAAkB,CAAvC;IACA,IAAMG,UAAU,GAAGL,IAAI,CAACM,QAAL,CAAcjB,cAAc,GAAGe,YAA/B,EAA6CH,MAA7C,CAAnB;IACA,IAAMM,MAAM,GAAGF,UAAU,CAACG,MAAX,CAAkBnB,cAAlB,EAAkCY,MAAlC,CAAf;IACAL,OAAO,CAACF,GAAR,CAAYa,MAAZ,EALqC,CAKhB;EACxB,CAVmB;EAWpBE,IAAI,EAAJ;IAAK;;SAAA,yCAAc;MAAdd;;;IACDC,OAAO,CAACa,IAAR,CAAYZ,KAAZ,UAAOC,SAASH,IAAT,CAAP,EADJ,CAC2B;EAC1B,CAbmB;EAcpBe,KAAK,EAAL,UAAMC,YAAN,EAA8C;IAC1C,IAAMC,qBAAqB,GAAGtB,CAAC,CAACuB,SAAF,CAAYF,YAAZ,EAA0B,UAACG,eAAD,EAAuBC,QAAvB,EAAuC;MAC3F,QAAC,CAACC,QAAF,CAAWF,eAAX,IAA8BA,eAAe,CAACG,cAAhB,EAA9B,GAAiEH,eAAjE;IAAgF,CADtD,CAA9B;;IAGAlB,OAAO,CAACc,KAAR,CAAcE,qBAAd,EAJ0C,CAIJ;EACzC,CAnBmB;EAoBpBM,WAAW,EAAX,UAAYC,GAAZ,EAAuB;IACnB1B,iBAASC,GAAT,CAAa,MAAI0B,gBAAMC,IAAN,CAAW,IAAIC,IAAJ,GAAWC,kBAAX,EAAX,CAAJ,GAA+C,IAA/C,GAAoDJ,GAAjE;EACH;AAtBmB,CAAX","names":["DEFAULT_TERMINAL_WIDTH","TERMINAL_WIDTH","_","get","process","exports","log","args","console","apply","__spread","header","text","padStr","padLength","length","padLengthEnd","leftPadded","padStart","padded","padEnd","warn","table","columnarData","formattedColumnarData","mapValues","columnOrColumns","_rowName","isNumber","toLocaleString","logWithTime","arg","chalk_1","gray","Date","toLocaleTimeString"],"sources":["../../src/log_utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}