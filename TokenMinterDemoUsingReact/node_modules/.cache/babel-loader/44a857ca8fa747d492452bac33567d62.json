{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* tslint:disable max-classes-per-file */\n\nvar _ = require(\"lodash\");\n\nvar queue_1 = require(\"../utils/queue\");\n\nvar blob_1 = require(\"./blocks/blob\");\n\nvar pointer_1 = require(\"./blocks/pointer\");\n\nvar set_1 = require(\"./blocks/set\");\n/**\n * Iterator class for Calldata Blocks. Blocks follows the order\n * they should be put into calldata that is passed to he EVM.\n *\n * Example #1:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                  } B,\n *                  Blob{} C\n *            }\n * It will iterate as follows: [A, B, C, B.a]\n *\n * Example #2:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                      Pointer {\n *                          Blob{} b\n *                      }\n *                  } B,\n *                  Pointer {\n *                      Blob{} c\n *                  } C\n *            }\n * It will iterate as follows: [A, B, C, B.a, B.b, C.c]\n */\n\n\nvar BaseIterator =\n/** @class */\nfunction () {\n  function BaseIterator(root) {\n    this._root = root;\n    this._queue = BaseIterator._createQueue(root);\n  }\n\n  BaseIterator._createQueue = function (block) {\n    var queue = new queue_1.Queue(); // Base case\n\n    if (!(block instanceof set_1.SetCalldataBlock)) {\n      queue.pushBack(block);\n      return queue;\n    } // This is a set; add members\n\n\n    var set = block;\n\n    _.eachRight(set.getMembers(), function (member) {\n      queue.mergeFront(BaseIterator._createQueue(member));\n    }); // Add children\n\n\n    _.each(set.getMembers(), function (member) {\n      // Traverse child if it is a unique pointer.\n      // A pointer that is an alias for another pointer is ignored.\n      if (member instanceof pointer_1.PointerCalldataBlock && member.getAlias() === undefined) {\n        var dependency = member.getDependency();\n        queue.mergeBack(BaseIterator._createQueue(dependency));\n      }\n    }); // Put set block at the front of the queue\n\n\n    queue.pushFront(set);\n    return queue;\n  };\n\n  BaseIterator.prototype[Symbol.iterator] = function () {\n    var _this = this;\n\n    return {\n      next: function () {\n        var nextBlock = _this.nextBlock();\n\n        if (nextBlock !== undefined) {\n          return {\n            value: nextBlock,\n            done: false\n          };\n        }\n\n        return {\n          done: true,\n          value: new blob_1.BlobCalldataBlock('', '', '', new Buffer(''))\n        };\n      }\n    };\n  };\n\n  return BaseIterator;\n}();\n\nvar CalldataIterator =\n/** @class */\nfunction (_super) {\n  __extends(CalldataIterator, _super);\n\n  function CalldataIterator(root) {\n    return _super.call(this, root) || this;\n  }\n\n  CalldataIterator.prototype.nextBlock = function () {\n    return this._queue.popFront();\n  };\n\n  return CalldataIterator;\n}(BaseIterator);\n\nexports.CalldataIterator = CalldataIterator;\n\nvar ReverseCalldataIterator =\n/** @class */\nfunction (_super) {\n  __extends(ReverseCalldataIterator, _super);\n\n  function ReverseCalldataIterator(root) {\n    return _super.call(this, root) || this;\n  }\n\n  ReverseCalldataIterator.prototype.nextBlock = function () {\n    return this._queue.popBack();\n  };\n\n  return ReverseCalldataIterator;\n}(BaseIterator);\n\nexports.ReverseCalldataIterator = ReverseCalldataIterator;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AAAA;AAAA;EA8BI,sBAAmBA,IAAnB,EAAsC;IAClC,KAAKC,KAAL,GAAaD,IAAb;IACA,KAAKE,MAAL,GAAcC,YAAY,CAACC,YAAb,CAA0BJ,IAA1B,CAAd;EACH;;EA7BcG,4BAAf,UAA4BE,KAA5B,EAAgD;IAC5C,IAAMC,KAAK,GAAG,IAAIC,aAAJ,EAAd,CAD4C,CAE5C;;IACA,IAAI,EAAEF,KAAK,YAAYG,sBAAnB,CAAJ,EAA0C;MACtCF,KAAK,CAACG,QAAN,CAAeJ,KAAf;MACA,OAAOC,KAAP;IACH,CAN2C,CAO5C;;;IACA,IAAMI,GAAG,GAAGL,KAAZ;;IACAM,CAAC,CAACC,SAAF,CAAYF,GAAG,CAACG,UAAJ,EAAZ,EAA8B,UAACC,MAAD,EAAsB;MAChDR,KAAK,CAACS,UAAN,CAAiBZ,YAAY,CAACC,YAAb,CAA0BU,MAA1B,CAAjB;IACH,CAFD,EAT4C,CAY5C;;;IACAH,CAAC,CAACK,IAAF,CAAON,GAAG,CAACG,UAAJ,EAAP,EAAyB,UAACC,MAAD,EAAsB;MAC3C;MACA;MACA,IAAIA,MAAM,YAAYG,8BAAlB,IAA0CH,MAAM,CAACI,QAAP,OAAsBC,SAApE,EAA+E;QAC3E,IAAMC,UAAU,GAAGN,MAAM,CAACO,aAAP,EAAnB;QACAf,KAAK,CAACgB,SAAN,CAAgBnB,YAAY,CAACC,YAAb,CAA0BgB,UAA1B,CAAhB;MACH;IACJ,CAPD,EAb4C,CAqB5C;;;IACAd,KAAK,CAACiB,SAAN,CAAgBb,GAAhB;IACA,OAAOJ,KAAP;EACH,CAxBc;;EA+BRH,uBAACqB,MAAM,CAACC,QAAR,IAAP;IAAA;;IACI,OAAO;MACHC,IAAI,EAAE;QACF,IAAMC,SAAS,GAAGC,KAAI,CAACD,SAAL,EAAlB;;QACA,IAAIA,SAAS,KAAKR,SAAlB,EAA6B;UACzB,OAAO;YACHU,KAAK,EAAEF,SADJ;YAEHG,IAAI,EAAE;UAFH,CAAP;QAIH;;QACD,OAAO;UACHA,IAAI,EAAE,IADH;UAEHD,KAAK,EAAE,IAAIE,wBAAJ,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,IAAIC,MAAJ,CAAW,EAAX,CAAlC;QAFJ,CAAP;MAIH;IAbE,CAAP;EAeH,CAhBM;;EAmBX;AAAC,CAtDD;;AAwDA;AAAA;AAAA;EAAsCC;;EAClC,0BAAmBjC,IAAnB,EAAsC;WAClCkC,kBAAMlC,IAAN,KAAW;EACd;;EAEMmC,uCAAP;IACI,OAAO,KAAKjC,MAAL,CAAYkC,QAAZ,EAAP;EACH,CAFM;;EAGX;AAAC,CARD,CAAsCjC,YAAtC;;AAAakC;;AAUb;AAAA;AAAA;EAA6CJ;;EACzC,iCAAmBjC,IAAnB,EAAsC;WAClCkC,kBAAMlC,IAAN,KAAW;EACd;;EAEMsC,8CAAP;IACI,OAAO,KAAKpC,MAAL,CAAYqC,OAAZ,EAAP;EACH,CAFM;;EAGX;AAAC,CARD,CAA6CpC,YAA7C;;AAAakC","names":["root","_root","_queue","BaseIterator","_createQueue","block","queue","queue_1","set_1","pushBack","set","_","eachRight","getMembers","member","mergeFront","each","pointer_1","getAlias","undefined","dependency","getDependency","mergeBack","pushFront","Symbol","iterator","next","nextBlock","_this","value","done","blob_1","Buffer","__extends","_super","CalldataIterator","popFront","exports","ReverseCalldataIterator","popBack"],"sources":["../../../../src/abi_encoder/calldata/iterator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}