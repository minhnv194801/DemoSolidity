{"ast":null,"code":"var base58 = require('bs58');\n\nvar createHash = require('create-hash');\n\nfunction encode(payload, version) {\n  if (Array.isArray(payload) || payload instanceof Uint8Array) {\n    payload = new Buffer(payload);\n  }\n\n  var buf;\n\n  if (version != null) {\n    if (typeof version === 'number') {\n      version = new Buffer([version]);\n    }\n\n    buf = Buffer.concat([version, payload]);\n  } else {\n    buf = payload;\n  }\n\n  var checksum = sha256x2(buf).slice(0, 4);\n  var result = Buffer.concat([buf, checksum]);\n  return base58.encode(result);\n}\n\nfunction decode(base58str, version) {\n  var arr = base58.decode(base58str);\n  var buf = new Buffer(arr);\n  var versionLength;\n\n  if (version == null) {\n    versionLength = 0;\n  } else {\n    if (typeof version === 'number') version = new Buffer([version]);\n    versionLength = version.length;\n    var versionCompare = buf.slice(0, versionLength);\n\n    if (versionCompare.toString('hex') !== version.toString('hex')) {\n      throw new Error('Invalid version');\n    }\n  }\n\n  var checksum = buf.slice(-4);\n  var endPos = buf.length - 4;\n  var bytes = buf.slice(0, endPos);\n  var newChecksum = sha256x2(bytes).slice(0, 4);\n\n  if (checksum.toString('hex') !== newChecksum.toString('hex')) {\n    throw new Error('Invalid checksum');\n  }\n\n  return bytes.slice(versionLength);\n}\n\nfunction isValid(base58str, version) {\n  try {\n    decode(base58str, version);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction createEncoder(version) {\n  return function (payload) {\n    return encode(payload, version);\n  };\n}\n\nfunction createDecoder(version) {\n  return function (base58str) {\n    return decode(base58str, version);\n  };\n}\n\nfunction createValidator(version) {\n  return function (base58str) {\n    return isValid(base58str, version);\n  };\n}\n\nfunction sha256x2(buffer) {\n  var sha = createHash('sha256').update(buffer).digest();\n  return createHash('sha256').update(sha).digest();\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  isValid: isValid,\n  createEncoder: createEncoder,\n  createDecoder: createDecoder,\n  createValidator: createValidator\n};","map":{"version":3,"names":["base58","require","createHash","encode","payload","version","Array","isArray","Uint8Array","Buffer","buf","concat","checksum","sha256x2","slice","result","decode","base58str","arr","versionLength","length","versionCompare","toString","Error","endPos","bytes","newChecksum","isValid","e","createEncoder","createDecoder","createValidator","buffer","sha","update","digest","module","exports"],"sources":["D:/Blockchain/test-react/node_modules/coinstring/lib/coinstring.js"],"sourcesContent":["var base58 = require('bs58')\nvar createHash = require('create-hash')\n\nfunction encode (payload, version) {\n  if (Array.isArray(payload) || payload instanceof Uint8Array) {\n    payload = new Buffer(payload)\n  }\n\n  var buf\n  if (version != null) {\n    if (typeof version === 'number') {\n      version = new Buffer([version])\n    }\n    buf = Buffer.concat([version, payload])\n  } else {\n    buf = payload\n  }\n\n  var checksum = sha256x2(buf).slice(0, 4)\n  var result = Buffer.concat([buf, checksum])\n  return base58.encode(result)\n}\n\nfunction decode (base58str, version) {\n  var arr = base58.decode(base58str)\n  var buf = new Buffer(arr)\n  var versionLength\n\n  if (version == null) {\n    versionLength = 0\n  } else {\n    if (typeof version === 'number') version = new Buffer([version])\n\n    versionLength = version.length\n    var versionCompare = buf.slice(0, versionLength)\n    if (versionCompare.toString('hex') !== version.toString('hex')) {\n      throw new Error('Invalid version')\n    }\n  }\n\n  var checksum = buf.slice(-4)\n  var endPos = buf.length - 4\n  var bytes = buf.slice(0, endPos)\n\n  var newChecksum = sha256x2(bytes).slice(0, 4)\n  if (checksum.toString('hex') !== newChecksum.toString('hex')) {\n    throw new Error('Invalid checksum')\n  }\n\n  return bytes.slice(versionLength)\n}\n\nfunction isValid (base58str, version) {\n  try {\n    decode(base58str, version)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nfunction createEncoder (version) {\n  return function (payload) {\n    return encode(payload, version)\n  }\n}\n\nfunction createDecoder (version) {\n  return function (base58str) {\n    return decode(base58str, version)\n  }\n}\n\nfunction createValidator (version) {\n  return function (base58str) {\n    return isValid(base58str, version)\n  }\n}\n\nfunction sha256x2 (buffer) {\n  var sha = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(sha).digest()\n}\n\nmodule.exports = {\n  encode: encode,\n  decode: decode,\n  isValid: isValid,\n  createEncoder: createEncoder,\n  createDecoder: createDecoder,\n  createValidator: createValidator\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}