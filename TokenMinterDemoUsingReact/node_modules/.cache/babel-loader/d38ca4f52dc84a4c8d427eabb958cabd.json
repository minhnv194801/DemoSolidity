{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* tslint:disable max-classes-per-file */\n\nvar _ = require(\"lodash\");\n\nvar queue_1 = require(\"../utils/queue\");\n\nvar blob_1 = require(\"./blocks/blob\");\n\nvar pointer_1 = require(\"./blocks/pointer\");\n\nvar set_1 = require(\"./blocks/set\");\n/**\n * Iterator class for Calldata Blocks. Blocks follows the order\n * they should be put into calldata that is passed to he EVM.\n *\n * Example #1:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                  } B,\n *                  Blob{} C\n *            }\n * It will iterate as follows: [A, B, C, B.a]\n *\n * Example #2:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                      Pointer {\n *                          Blob{} b\n *                      }\n *                  } B,\n *                  Pointer {\n *                      Blob{} c\n *                  } C\n *            }\n * It will iterate as follows: [A, B, C, B.a, B.b, C.c]\n */\n\n\nvar BaseIterator =\n/** @class */\nfunction () {\n  function BaseIterator(root) {\n    this._root = root;\n    this._queue = BaseIterator._createQueue(root);\n  }\n\n  BaseIterator._createQueue = function (block) {\n    var queue = new queue_1.Queue(); // Base case\n\n    if (!(block instanceof set_1.SetCalldataBlock)) {\n      queue.pushBack(block);\n      return queue;\n    } // This is a set; add members\n\n\n    var set = block;\n\n    _.eachRight(set.getMembers(), function (member) {\n      queue.mergeFront(BaseIterator._createQueue(member));\n    }); // Add children\n\n\n    _.each(set.getMembers(), function (member) {\n      // Traverse child if it is a unique pointer.\n      // A pointer that is an alias for another pointer is ignored.\n      if (member instanceof pointer_1.PointerCalldataBlock && member.getAlias() === undefined) {\n        var dependency = member.getDependency();\n        queue.mergeBack(BaseIterator._createQueue(dependency));\n      }\n    }); // Put set block at the front of the queue\n\n\n    queue.pushFront(set);\n    return queue;\n  };\n\n  BaseIterator.prototype[Symbol.iterator] = function () {\n    var _this = this;\n\n    return {\n      next: function () {\n        var nextBlock = _this.nextBlock();\n\n        if (nextBlock !== undefined) {\n          return {\n            value: nextBlock,\n            done: false\n          };\n        }\n\n        return {\n          done: true,\n          value: new blob_1.BlobCalldataBlock('', '', '', new Buffer(''))\n        };\n      }\n    };\n  };\n\n  return BaseIterator;\n}();\n\nvar CalldataIterator =\n/** @class */\nfunction (_super) {\n  __extends(CalldataIterator, _super);\n\n  function CalldataIterator(root) {\n    return _super.call(this, root) || this;\n  }\n\n  CalldataIterator.prototype.nextBlock = function () {\n    return this._queue.popFront();\n  };\n\n  return CalldataIterator;\n}(BaseIterator);\n\nexports.CalldataIterator = CalldataIterator;\n\nvar ReverseCalldataIterator =\n/** @class */\nfunction (_super) {\n  __extends(ReverseCalldataIterator, _super);\n\n  function ReverseCalldataIterator(root) {\n    return _super.call(this, root) || this;\n  }\n\n  ReverseCalldataIterator.prototype.nextBlock = function () {\n    return this._queue.popBack();\n  };\n\n  return ReverseCalldataIterator;\n}(BaseIterator);\n\nexports.ReverseCalldataIterator = ReverseCalldataIterator;","map":{"version":3,"sources":["../../../../src/abi_encoder/calldata/iterator.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable max-classes-per-file */\nvar _ = require(\"lodash\");\nvar queue_1 = require(\"../utils/queue\");\nvar blob_1 = require(\"./blocks/blob\");\nvar pointer_1 = require(\"./blocks/pointer\");\nvar set_1 = require(\"./blocks/set\");\n/**\n * Iterator class for Calldata Blocks. Blocks follows the order\n * they should be put into calldata that is passed to he EVM.\n *\n * Example #1:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                  } B,\n *                  Blob{} C\n *            }\n * It will iterate as follows: [A, B, C, B.a]\n *\n * Example #2:\n * Let root = Set {\n *                  Blob{} A,\n *                  Pointer {\n *                      Blob{} a\n *                      Pointer {\n *                          Blob{} b\n *                      }\n *                  } B,\n *                  Pointer {\n *                      Blob{} c\n *                  } C\n *            }\n * It will iterate as follows: [A, B, C, B.a, B.b, C.c]\n */\nvar BaseIterator = /** @class */ (function () {\n    function BaseIterator(root) {\n        this._root = root;\n        this._queue = BaseIterator._createQueue(root);\n    }\n    BaseIterator._createQueue = function (block) {\n        var queue = new queue_1.Queue();\n        // Base case\n        if (!(block instanceof set_1.SetCalldataBlock)) {\n            queue.pushBack(block);\n            return queue;\n        }\n        // This is a set; add members\n        var set = block;\n        _.eachRight(set.getMembers(), function (member) {\n            queue.mergeFront(BaseIterator._createQueue(member));\n        });\n        // Add children\n        _.each(set.getMembers(), function (member) {\n            // Traverse child if it is a unique pointer.\n            // A pointer that is an alias for another pointer is ignored.\n            if (member instanceof pointer_1.PointerCalldataBlock && member.getAlias() === undefined) {\n                var dependency = member.getDependency();\n                queue.mergeBack(BaseIterator._createQueue(dependency));\n            }\n        });\n        // Put set block at the front of the queue\n        queue.pushFront(set);\n        return queue;\n    };\n    BaseIterator.prototype[Symbol.iterator] = function () {\n        var _this = this;\n        return {\n            next: function () {\n                var nextBlock = _this.nextBlock();\n                if (nextBlock !== undefined) {\n                    return {\n                        value: nextBlock,\n                        done: false,\n                    };\n                }\n                return {\n                    done: true,\n                    value: new blob_1.BlobCalldataBlock('', '', '', new Buffer('')),\n                };\n            },\n        };\n    };\n    return BaseIterator;\n}());\nvar CalldataIterator = /** @class */ (function (_super) {\n    __extends(CalldataIterator, _super);\n    function CalldataIterator(root) {\n        return _super.call(this, root) || this;\n    }\n    CalldataIterator.prototype.nextBlock = function () {\n        return this._queue.popFront();\n    };\n    return CalldataIterator;\n}(BaseIterator));\nexports.CalldataIterator = CalldataIterator;\nvar ReverseCalldataIterator = /** @class */ (function (_super) {\n    __extends(ReverseCalldataIterator, _super);\n    function ReverseCalldataIterator(root) {\n        return _super.call(this, root) || this;\n    }\n    ReverseCalldataIterator.prototype.nextBlock = function () {\n        return this._queue.popBack();\n    };\n    return ReverseCalldataIterator;\n}(BaseIterator));\nexports.ReverseCalldataIterator = ReverseCalldataIterator;\n//# sourceMappingURL=iterator.js.map"]},"metadata":{},"sourceType":"script"}