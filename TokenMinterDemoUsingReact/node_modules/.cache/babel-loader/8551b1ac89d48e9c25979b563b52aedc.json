{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain\\\\test-react\\\\src\\\\component\\\\MintLedger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TokenMinter from \"../contracts/TokenMinter.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MintLedger() {\n  _s();\n\n  const [mintHistory, setMintHistory] = useState([]);\n  useEffect(() => {\n    async function fetchMintHistory() {\n      const tokenMinterAddress = '0x19A5A6878e66e5E12F04114ca5ef8e94919Ac9C8';\n      const tokenMinterContract = this.props.web3.eth.Contract(TokenMinter.abi, tokenMinterAddress);\n      return await tokenMinterContract.methods.getMintHistory().call();\n    }\n\n    fetchMintHistory().then(res => {\n      setMintHistory(res);\n    });\n  }, []);\n  const ledger = mintHistory.map(prop => {\n    let time = new Date(prop.time * 1000);\n    const tokenUrl = \"http://localhost:3000/token?address=\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time stamp: \", time.toUTCString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address:  \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: tokenUrl.concat(prop.tokenAddress),\n          children: prop.tokenAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ledger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), mintHistory.length ? {\n      ledger\n    } : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Currently loading token minter's ledger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MintLedger, \"GNyN3aoXI///xCeA5Z7pURWHCFw=\");\n\n_c = MintLedger;\nexport default MintLedger;\n\nvar _c;\n\n$RefreshReg$(_c, \"MintLedger\");","map":{"version":3,"names":["React","useEffect","useState","TokenMinter","MintLedger","mintHistory","setMintHistory","fetchMintHistory","tokenMinterAddress","tokenMinterContract","props","web3","eth","Contract","abi","methods","getMintHistory","call","then","res","ledger","map","prop","time","Date","tokenUrl","toUTCString","concat","tokenAddress","length"],"sources":["D:/Blockchain/test-react/src/component/MintLedger.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TokenMinter from \"../contracts/TokenMinter.json\"\r\n\r\nfunction MintLedger() {\r\n  const [mintHistory, setMintHistory] = useState([])\r\n  useEffect(() => {\r\n    async function fetchMintHistory() {\r\n      const tokenMinterAddress = '0x19A5A6878e66e5E12F04114ca5ef8e94919Ac9C8';\r\n      const tokenMinterContract = this.props.web3.eth.Contract(TokenMinter.abi, tokenMinterAddress);\r\n      return await tokenMinterContract.methods.getMintHistory().call();\r\n    }\r\n    fetchMintHistory().then(res => {setMintHistory(res)})\r\n  },[])\r\n  \r\n  const ledger = mintHistory.map((prop) => {\r\n    let time = new Date(prop.time * 1000)\r\n    const tokenUrl = \"http://localhost:3000/token?address=\"\r\n    return (\r\n      <div>\r\n        <p>Time stamp: {time.toUTCString()}</p>\r\n        <p>Address:  <a href = {tokenUrl.concat(prop.tokenAddress)}>{prop.tokenAddress}</a></p>\r\n      </div>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Ledger\r\n      </h1>\r\n      {mintHistory.length?{ledger}:<p>Currently loading token minter's ledger</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MintLedger;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;EACAD,SAAS,CAAC,MAAM;IACd,eAAeM,gBAAf,GAAkC;MAChC,MAAMC,kBAAkB,GAAG,4CAA3B;MACA,MAAMC,mBAAmB,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,GAAhB,CAAoBC,QAApB,CAA6BV,WAAW,CAACW,GAAzC,EAA8CN,kBAA9C,CAA5B;MACA,OAAO,MAAMC,mBAAmB,CAACM,OAApB,CAA4BC,cAA5B,GAA6CC,IAA7C,EAAb;IACD;;IACDV,gBAAgB,GAAGW,IAAnB,CAAwBC,GAAG,IAAI;MAACb,cAAc,CAACa,GAAD,CAAd;IAAoB,CAApD;EACD,CAPQ,EAOP,EAPO,CAAT;EASA,MAAMC,MAAM,GAAGf,WAAW,CAACgB,GAAZ,CAAiBC,IAAD,IAAU;IACvC,IAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACC,IAAL,GAAY,IAArB,CAAX;IACA,MAAME,QAAQ,GAAG,sCAAjB;IACA,oBACE;MAAA,wBACE;QAAA,2BAAgBF,IAAI,CAACG,WAAL,EAAhB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,sCAAa;UAAG,IAAI,EAAID,QAAQ,CAACE,MAAT,CAAgBL,IAAI,CAACM,YAArB,CAAX;UAAA,UAAgDN,IAAI,CAACM;QAArD;UAAA;UAAA;UAAA;QAAA,QAAb;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAMD,CATc,CAAf;EAWA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAIGvB,WAAW,CAACwB,MAAZ,GAAmB;MAACT;IAAD,CAAnB,gBAA4B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJ/B;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GA9BQhB,U;;KAAAA,U;AAgCT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}