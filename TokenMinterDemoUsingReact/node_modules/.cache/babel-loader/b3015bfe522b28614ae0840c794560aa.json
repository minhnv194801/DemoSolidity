{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethereum_types_1 = require(\"ethereum-types\");\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar configured_bignumber_1 = require(\"../../configured_bignumber\");\n\nvar blob_1 = require(\"../abstract_data_types/types/blob\");\n\nvar constants_1 = require(\"../utils/constants\");\n\nvar BoolDataType =\n/** @class */\nfunction (_super) {\n  __extends(BoolDataType, _super);\n\n  function BoolDataType(dataItem, dataTypeFactory) {\n    var _this = _super.call(this, dataItem, dataTypeFactory, BoolDataType._SIZE_KNOWN_AT_COMPILE_TIME) || this;\n\n    if (!BoolDataType.matchType(dataItem.type)) {\n      throw new Error(\"Tried to instantiate Bool with bad input: \" + dataItem);\n    }\n\n    return _this;\n  }\n\n  BoolDataType.matchType = function (type) {\n    return type === ethereum_types_1.SolidityTypes.Bool;\n  }; // Disable prefer-function-over-method for inherited abstract methods.\n\n  /* tslint:disable prefer-function-over-method */\n\n\n  BoolDataType.prototype.encodeValue = function (value) {\n    var encodedValue = value ? '0x1' : '0x0';\n    var encodedValueBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(encodedValue), constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n    return encodedValueBuf;\n  };\n\n  BoolDataType.prototype.decodeValue = function (calldata) {\n    var valueBuf = calldata.popWord();\n    var valueHex = ethUtil.bufferToHex(valueBuf); // Hack @hysz: there are some cases where `false` is encoded as 0x instead of 0x0.\n\n    var valueNumber = valueHex === '0x' ? new configured_bignumber_1.BigNumber(0) : new configured_bignumber_1.BigNumber(valueHex, constants_1.constants.HEX_BASE);\n\n    if (!(valueNumber.isEqualTo(0) || valueNumber.isEqualTo(1))) {\n      throw new Error(\"Failed to decode boolean. Expected 0x0 or 0x1, got \" + valueHex);\n    }\n    /* tslint:disable boolean-naming */\n\n\n    var value = !valueNumber.isEqualTo(0);\n    /* tslint:enable boolean-naming */\n\n    return value;\n  };\n\n  BoolDataType.prototype.getDefaultValue = function () {\n    return BoolDataType._DEFAULT_VALUE;\n  };\n\n  BoolDataType.prototype.getSignatureType = function () {\n    return ethereum_types_1.SolidityTypes.Bool;\n  };\n\n  BoolDataType._SIZE_KNOWN_AT_COMPILE_TIME = true;\n  BoolDataType._DEFAULT_VALUE = false;\n  return BoolDataType;\n}(blob_1.AbstractBlobDataType);\n\nexports.BoolDataType = BoolDataType;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AAEA;;AAEA;;AAEA;AAAA;AAAA;EAAkCA;;EAQ9B,sBAAmBC,QAAnB,EAAuCC,eAAvC,EAAuE;IAAvE,YACIC,kBAAMF,QAAN,EAAgBC,eAAhB,EAAiCE,YAAY,CAACC,2BAA9C,KAA0E,IAD9E;;IAEI,IAAI,CAACD,YAAY,CAACE,SAAb,CAAuBL,QAAQ,CAACM,IAAhC,CAAL,EAA4C;MACxC,MAAM,IAAIC,KAAJ,CAAU,+CAA6CP,QAAvD,CAAN;IACH;;;EACJ;;EATaG,yBAAd,UAAwBG,IAAxB,EAAoC;IAChC,OAAOA,IAAI,KAAKE,+BAAcC,IAA9B;EACH,CAFa,CAJlB,CAeI;;EACA;;;EACON,qCAAP,UAAmBO,KAAnB,EAAiC;IAC7B,IAAMC,YAAY,GAAGD,KAAK,GAAG,KAAH,GAAW,KAArC;IACA,IAAME,eAAe,GAAGC,OAAO,CAACC,aAAR,CACpBD,OAAO,CAACE,QAAR,CAAiBJ,YAAjB,CADoB,EAEpBK,sBAAUC,uBAFU,CAAxB;IAIA,OAAOL,eAAP;EACH,CAPM;;EASAT,qCAAP,UAAmBe,QAAnB,EAAwC;IACpC,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,OAAT,EAAjB;IACA,IAAMC,QAAQ,GAAGR,OAAO,CAACS,WAAR,CAAoBH,QAApB,CAAjB,CAFoC,CAGpC;;IACA,IAAMI,WAAW,GAAGF,QAAQ,KAAK,IAAb,GAAoB,IAAIG,gCAAJ,CAAc,CAAd,CAApB,GAAuC,IAAIA,gCAAJ,CAAcH,QAAd,EAAwBL,sBAAUS,QAAlC,CAA3D;;IACA,IAAI,EAAEF,WAAW,CAACG,SAAZ,CAAsB,CAAtB,KAA4BH,WAAW,CAACG,SAAZ,CAAsB,CAAtB,CAA9B,CAAJ,EAA6D;MACzD,MAAM,IAAInB,KAAJ,CAAU,wDAAsDc,QAAhE,CAAN;IACH;IACD;;;IACA,IAAMX,KAAK,GAAY,CAACa,WAAW,CAACG,SAAZ,CAAsB,CAAtB,CAAxB;IACA;;IACA,OAAOhB,KAAP;EACH,CAZM;;EAcAP,yCAAP;IACI,OAAOA,YAAY,CAACwB,cAApB;EACH,CAFM;;EAIAxB,0CAAP;IACI,OAAOK,+BAAcC,IAArB;EACH,CAFM;;EA3CiBN,2CAAuC,IAAvC;EACAA,8BAA0B,KAA1B;EA8C5B;AAAC,CAhDD,CAAkCyB,2BAAlC;;AAAaC","names":["__extends","dataItem","dataTypeFactory","_super","BoolDataType","_SIZE_KNOWN_AT_COMPILE_TIME","matchType","type","Error","ethereum_types_1","Bool","value","encodedValue","encodedValueBuf","ethUtil","setLengthLeft","toBuffer","constants_1","EVM_WORD_WIDTH_IN_BYTES","calldata","valueBuf","popWord","valueHex","bufferToHex","valueNumber","configured_bignumber_1","HEX_BASE","isEqualTo","_DEFAULT_VALUE","blob_1","exports"],"sources":["../../../../src/abi_encoder/evm_data_types/bool.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}