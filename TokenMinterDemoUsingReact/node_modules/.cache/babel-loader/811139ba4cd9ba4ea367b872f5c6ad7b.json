{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain\\\\test-react\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from 'web3';\nimport TokenMinter from './contracts/TokenMinter.json';\nimport MintLedger from './MintLedger';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.mintToken = async () => {\n      let totalSupply = await this.state.tokenMinterContract.methods.getTotalSupply().call();\n      console.log(totalSupply);\n    };\n\n    this.handleOwnerTextFieldChange = e => {\n      this.setState({\n        ownerTextFieldValue: e.target.value\n      });\n    };\n\n    this.handleNameTextFieldChange = e => {\n      this.setState({\n        nameTextFieldValue: e.target.value\n      });\n    };\n\n    console.log(this.props.location.search);\n    this.state = {\n      web3: null,\n      account: null,\n      tokenMinterContract: null,\n      minterLedger: [],\n      ownerTextFieldValue: null,\n      nameTextFieldValue: null\n    };\n\n    if (window.ethereum) {\n      //get user's metamask account\n      this.state.web3 = new Web3(window.ethereum);\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        this.setState({\n          account: accounts[0]\n        });\n      });\n      window.ethereum.on('accountsChanged', accounts => {\n        this.setState({\n          account: accounts[0]\n        });\n      });\n    } else {\n      //connect to the default provider\n      this.state.web3 = new Web3(new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/9b11910966d3430e9846e504d5847593\"));\n    }\n\n    const tokenMinterAddress = '0x19A5A6878e66e5E12F04114ca5ef8e94919Ac9C8';\n    this.state.tokenMinterContract = new this.state.web3.eth.Contract(TokenMinter.abi, tokenMinterAddress);\n  }\n\n  componentDidMount() {\n    this.state.tokenMinterContract.methods.getMintHistory().call().then(res => this.setState({\n      minterLedger: res\n    }));\n  }\n\n  renderMinterDiv() {\n    if (this.state.account === \"0xf61b13cd9b7e6cc7e3609f604232953ca8614bbc\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"minterdiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Token's owner: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"owner\",\n            type: \"text\",\n            onChange: this.handleOwnerTextFieldChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Token's name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            onChange: this.handleNameTextFieldChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.mintToken(),\n            children: \"Mint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    } else {\n      return;\n    }\n  }\n\n  renderMintLedger() {\n    return /*#__PURE__*/_jsxDEV(MintLedger, {\n      mintHistory: this.state.minterLedger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"TokenMinter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), this.renderMinterDiv(), this.state.minterLedger.length ? this.renderMintLedger() : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Currently loading token minter's ledger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","Web3","TokenMinter","MintLedger","App","constructor","props","mintToken","totalSupply","state","tokenMinterContract","methods","getTotalSupply","call","console","log","handleOwnerTextFieldChange","e","setState","ownerTextFieldValue","target","value","handleNameTextFieldChange","nameTextFieldValue","location","search","web3","account","minterLedger","window","ethereum","request","method","then","accounts","on","providers","HttpProvider","tokenMinterAddress","eth","Contract","abi","componentDidMount","getMintHistory","res","renderMinterDiv","renderMintLedger","render","length"],"sources":["D:/Blockchain/test-react/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from 'web3';\nimport TokenMinter from './contracts/TokenMinter.json'\nimport MintLedger from './MintLedger'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    console.log(this.props.location.search)\n    \n    this.state = {\n      web3: null,\n      account: null,\n      tokenMinterContract: null,\n      minterLedger: [],\n      ownerTextFieldValue: null,\n      nameTextFieldValue: null\n    }\n\n    if (window.ethereum) {\n      //get user's metamask account\n      this.state.web3 = new Web3(window.ethereum);\n      window.ethereum.request({ method: 'eth_requestAccounts' }).then((accounts) => {\n        this.setState({\n          account: accounts[0]\n        })\n      })\n  \n      window.ethereum.on('accountsChanged', (accounts) => {\n        this.setState({\n          account: accounts[0]\n        })\n      })\n    } else {\n      //connect to the default provider\n      this.state.web3 = new Web3(new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/9b11910966d3430e9846e504d5847593\"))\n    }\n\n    const tokenMinterAddress = '0x19A5A6878e66e5E12F04114ca5ef8e94919Ac9C8'\n    this.state.tokenMinterContract = new this.state.web3.eth\n      .Contract(TokenMinter.abi, tokenMinterAddress)\n  }\n\n  componentDidMount() {\n    this.state.tokenMinterContract.methods.getMintHistory().call()\n      .then(res => this.setState({ minterLedger: res }) )\n  }\n\n  mintToken = async() => {\n    let totalSupply = await this.state.tokenMinterContract.methods.getTotalSupply().call()\n    console.log(totalSupply)\n  }\n\n  handleOwnerTextFieldChange = (e) => {\n    this.setState({\n      ownerTextFieldValue: e.target.value\n    })\n  }\n\n  handleNameTextFieldChange = (e) => {\n    this.setState({\n      nameTextFieldValue: e.target.value\n    })\n  }\n\n  renderMinterDiv() {\n    if (this.state.account === \"0xf61b13cd9b7e6cc7e3609f604232953ca8614bbc\") {\n      return (\n        <div class=\"minterdiv\">\n          <p>Token's owner: <input id=\"owner\" type=\"text\" onChange={this.handleOwnerTextFieldChange}/></p>\n          <p>Token's name: <input id=\"name\" type=\"text\" onChange={this.handleNameTextFieldChange}/></p>\n          <p><button onClick={() => this.mintToken()}>Mint</button></p>\n        </div>\n      );\n    } else {\n      return ;\n    }\n  }\n\n  renderMintLedger() {\n    return (\n      <MintLedger mintHistory={this.state.minterLedger}/>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>\n          TokenMinter\n        </p>\n        {this.renderMinterDiv()}\n        {this.state.minterLedger.length?this.renderMintLedger():<p>Currently loading token minter's ledger</p>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}