{"ast":null,"code":"var _jsxFileName = \"D:\\\\Blockchain\\\\test-react\\\\src\\\\token\\\\component\\\\TransferTokenForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport Token from '../../contracts/Token.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TransferTokenForm(props) {\n  _s();\n\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const [ownerAddress, setOwnerAddress] = useState(\"\");\n  const [transferFeedback, setTransferFeedback] = useState(null);\n\n  const handleTokenTextFieldChange = e => {\n    setTokenAddress(e.target.value);\n  };\n\n  const handleOwnerTextFieldChange = e => {\n    setOwnerAddress(e.target.value);\n  };\n\n  const handleTransferToken = async () => {\n    if (window.ethereum) {\n      let web3 = new Web3(window.ethereum);\n      var tokenContract = await new web3.eth.Contract(Token.abi, tokenAddress); //building the transaction to call mint() to the tokenMinter on blockchain\n\n      let txBuilder = await tokenContract.methods.transfer(ownerAddress);\n      let encodedTx = await txBuilder.encodeABI();\n      let transactionObject = {\n        data: encodedTx,\n        from: from,\n        to: tokenAddress\n      }; //call metamask to let users sign the transaction then send it\n\n      let txHash = await window.ethereum.request({\n        method: 'eth_sendTransaction',\n        params: [transactionObject]\n      });\n      return txHash;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Transfer Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Token's address: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"transfer_token_address\",\n          type: \"text\",\n          onChange: handleTokenTextFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address to transfer to: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"address_to_transfer\",\n          type: \"text\",\n          onChange: handleOwnerTextFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"transfer_button\",\n          type: \"button\",\n          onClick: handleTransferToken,\n          children: \"Transfer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Transfer successful in transaction:  \", transferFeedback.txHash]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransferTokenForm, \"m/emCwpfSv+e+0qFbCfpSGp7Z10=\");\n\n_c = TransferTokenForm;\nexport default TransferTokenForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransferTokenForm\");","map":{"version":3,"names":["React","useState","Web3","Token","TransferTokenForm","props","tokenAddress","setTokenAddress","ownerAddress","setOwnerAddress","transferFeedback","setTransferFeedback","handleTokenTextFieldChange","e","target","value","handleOwnerTextFieldChange","handleTransferToken","window","ethereum","web3","tokenContract","eth","Contract","abi","txBuilder","methods","transfer","encodedTx","encodeABI","transactionObject","data","from","to","txHash","request","method","params"],"sources":["D:/Blockchain/test-react/src/token/component/TransferTokenForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Web3 from 'web3'\r\nimport Token from '../../contracts/Token.json'\r\n\r\nfunction TransferTokenForm(props) {\r\n    const [tokenAddress, setTokenAddress] = useState(\"\");\r\n    const [ownerAddress, setOwnerAddress] = useState(\"\");\r\n    const [transferFeedback, setTransferFeedback] = useState(null);\r\n\r\n    const handleTokenTextFieldChange = (e) => {\r\n        setTokenAddress(e.target.value);\r\n    }\r\n\r\n    const handleOwnerTextFieldChange = (e) => {\r\n        setOwnerAddress(e.target.value);\r\n    }\r\n\r\n    const handleTransferToken = async () => {\r\n        if (window.ethereum) {\r\n            let web3 = new Web3(window.ethereum);\r\n            var tokenContract = await new web3.eth.Contract(Token.abi, tokenAddress)\r\n\r\n            //building the transaction to call mint() to the tokenMinter on blockchain\r\n            let txBuilder = await tokenContract.methods.transfer(ownerAddress);\r\n            let encodedTx = await txBuilder.encodeABI();\r\n            let transactionObject = {\r\n                data: encodedTx,\r\n                from: from,\r\n                to: tokenAddress\r\n            };\r\n        \r\n            //call metamask to let users sign the transaction then send it\r\n            let txHash = await window.ethereum.request({\r\n            method: 'eth_sendTransaction',\r\n            params: [transactionObject],\r\n            });\r\n        \r\n            return txHash\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Transfer Token</h1>\r\n            <div>\r\n                <p>Token's address: <input id=\"transfer_token_address\" type=\"text\" onChange={handleTokenTextFieldChange} /></p>\r\n                <p>Address to transfer to: <input id=\"address_to_transfer\" type=\"text\" onChange={handleOwnerTextFieldChange}/></p>\r\n                <p><button id=\"transfer_button\" type=\"button\" onClick={handleTransferToken}>Transfer</button></p>\r\n            </div>\r\n\r\n            <p> Transfer successful in transaction:  {transferFeedback.txHash}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransferTokenForm;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;EAAA;;EAC9B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,IAAD,CAAxD;;EAEA,MAAMW,0BAA0B,GAAIC,CAAD,IAAO;IACtCN,eAAe,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;EACH,CAFD;;EAIA,MAAMC,0BAA0B,GAAIH,CAAD,IAAO;IACtCJ,eAAe,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;EACH,CAFD;;EAIA,MAAME,mBAAmB,GAAG,YAAY;IACpC,IAAIC,MAAM,CAACC,QAAX,EAAqB;MACjB,IAAIC,IAAI,GAAG,IAAIlB,IAAJ,CAASgB,MAAM,CAACC,QAAhB,CAAX;MACA,IAAIE,aAAa,GAAG,MAAM,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CAAsBpB,KAAK,CAACqB,GAA5B,EAAiClB,YAAjC,CAA1B,CAFiB,CAIjB;;MACA,IAAImB,SAAS,GAAG,MAAMJ,aAAa,CAACK,OAAd,CAAsBC,QAAtB,CAA+BnB,YAA/B,CAAtB;MACA,IAAIoB,SAAS,GAAG,MAAMH,SAAS,CAACI,SAAV,EAAtB;MACA,IAAIC,iBAAiB,GAAG;QACpBC,IAAI,EAAEH,SADc;QAEpBI,IAAI,EAAEA,IAFc;QAGpBC,EAAE,EAAE3B;MAHgB,CAAxB,CAPiB,CAajB;;MACA,IAAI4B,MAAM,GAAG,MAAMhB,MAAM,CAACC,QAAP,CAAgBgB,OAAhB,CAAwB;QAC3CC,MAAM,EAAE,qBADmC;QAE3CC,MAAM,EAAE,CAACP,iBAAD;MAFmC,CAAxB,CAAnB;MAKA,OAAOI,MAAP;IACH;EACJ,CAtBD;;EAwBA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,wBACI;QAAA,6CAAoB;UAAO,EAAE,EAAC,wBAAV;UAAmC,IAAI,EAAC,MAAxC;UAA+C,QAAQ,EAAEtB;QAAzD;UAAA;UAAA;UAAA;QAAA,QAApB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,oDAA2B;UAAO,EAAE,EAAC,qBAAV;UAAgC,IAAI,EAAC,MAArC;UAA4C,QAAQ,EAAEI;QAAtD;UAAA;UAAA;UAAA;QAAA,QAA3B;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAA,uBAAG;UAAQ,EAAE,EAAC,iBAAX;UAA6B,IAAI,EAAC,QAAlC;UAA2C,OAAO,EAAEC,mBAApD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAH;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQI;MAAA,qDAA0CP,gBAAgB,CAACwB,MAA3D;IAAA;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH;;GAjDQ9B,iB;;KAAAA,iB;AAmDT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}