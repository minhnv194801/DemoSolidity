{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defer = defer;\nexports.splitPath = splitPath;\nexports.eachSeries = eachSeries;\nexports.foreach = foreach;\nexports.doIf = doIf;\nexports.asyncWhile = asyncWhile;\n\nfunction defer() {\n  var resolve = void 0,\n      reject = void 0;\n  var promise = new Promise(function (success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n\n  return {\n    promise: promise,\n    resolve: resolve,\n    reject: reject\n  };\n} // TODO use bip32-path library\n\n/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n\n\nfunction splitPath(path) {\n  var result = [];\n  var components = path.split(\"/\");\n  components.forEach(function (element) {\n    var number = parseInt(element, 10);\n\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n\n    result.push(number);\n  });\n  return result;\n} // TODO use async await\n\n\nfunction eachSeries(arr, fun) {\n  return arr.reduce(function (p, e) {\n    return p.then(function () {\n      return fun(e);\n    });\n  }, Promise.resolve());\n}\n\nfunction foreach(arr, callback) {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else return callback(array[index], index).then(function (res) {\n      result.push(res);\n      return iterate(index + 1, array, result);\n    });\n  }\n\n  return Promise.resolve().then(function () {\n    return iterate(0, arr, []);\n  });\n}\n\nfunction doIf(condition, callback) {\n  return Promise.resolve().then(function () {\n    if (condition) {\n      return callback();\n    }\n  });\n}\n\nfunction asyncWhile(predicate, callback) {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(function (res) {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n\n  return Promise.resolve([]).then(iterate);\n}","map":{"version":3,"sources":["../src/utils.js"],"names":["defer","resolve","reject","promise","splitPath","result","components","path","number","parseInt","isNaN","element","eachSeries","fun","Promise","foreach","index","array","iterate","doIf","callback","asyncWhile","predicate"],"mappings":"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","sourcesContent":["/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\ntype Defer<T> = {\n  promise: Promise<T>,\n  resolve: T => void,\n  reject: any => void\n};\n\nexport function defer<T>(): Defer<T> {\n  let resolve, reject;\n  let promise = new Promise(function(success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n  return { promise, resolve, reject };\n}\n\n// TODO use bip32-path library\nexport function splitPath(path: string): number[] {\n  let result = [];\n  let components = path.split(\"/\");\n  components.forEach(element => {\n    let number = parseInt(element, 10);\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n    result.push(number);\n  });\n  return result;\n}\n\n// TODO use async await\n\nexport function eachSeries<A>(arr: A[], fun: A => Promise<*>): Promise<*> {\n  return arr.reduce((p, e) => p.then(() => fun(e)), Promise.resolve());\n}\n\nexport function foreach<T, A>(\n  arr: T[],\n  callback: (T, number) => Promise<A>\n): Promise<A[]> {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else\n      return callback(array[index], index).then(function(res) {\n        result.push(res);\n        return iterate(index + 1, array, result);\n      });\n  }\n  return Promise.resolve().then(() => iterate(0, arr, []));\n}\n\nexport function doIf(\n  condition: boolean,\n  callback: () => any | Promise<any>\n): Promise<void> {\n  return Promise.resolve().then(() => {\n    if (condition) {\n      return callback();\n    }\n  });\n}\n\nexport function asyncWhile<T>(\n  predicate: () => boolean,\n  callback: () => Promise<T>\n): Promise<Array<T>> {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(res => {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n  return Promise.resolve([]).then(iterate);\n}\n"]},"metadata":{},"sourceType":"script"}