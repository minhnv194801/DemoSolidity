{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethUtil = require(\"ethereumjs-util\");\n\nvar _ = require(\"lodash\");\n\nvar configured_bignumber_1 = require(\"../../../configured_bignumber\");\n\nvar set_1 = require(\"../../calldata/blocks/set\");\n\nvar constants_1 = require(\"../../utils/constants\");\n\nvar data_type_1 = require(\"../data_type\");\n\nvar pointer_1 = require(\"./pointer\");\n\nvar AbstractSetDataType =\n/** @class */\nfunction (_super) {\n  __extends(AbstractSetDataType, _super);\n\n  function AbstractSetDataType(dataItem, factory, isArray, arrayLength, arrayElementType) {\n    var _a, _b;\n\n    if (isArray === void 0) {\n      isArray = false;\n    }\n\n    var _this = _super.call(this, dataItem, factory) || this;\n\n    _this._memberIndexByName = {};\n    _this._members = [];\n    _this._isArray = isArray;\n    _this._arrayLength = arrayLength;\n    _this._arrayElementType = arrayElementType;\n\n    if (isArray && arrayLength !== undefined) {\n      _a = __read(_this._createMembersWithLength(dataItem, arrayLength), 2), _this._members = _a[0], _this._memberIndexByName = _a[1];\n    } else if (!isArray) {\n      _b = __read(_this._createMembersWithKeys(dataItem), 2), _this._members = _b[0], _this._memberIndexByName = _b[1];\n    }\n\n    return _this;\n  }\n\n  AbstractSetDataType.prototype.generateCalldataBlock = function (value, parentBlock) {\n    var block = value instanceof Array ? this._generateCalldataBlockFromArray(value, parentBlock) : this._generateCalldataBlockFromObject(value, parentBlock);\n    return block;\n  };\n\n  AbstractSetDataType.prototype.generateValue = function (calldata, rules) {\n    var _this = this;\n\n    var _a;\n\n    var members = this._members; // Case 1: This is an array of undefined length, which means that `this._members` was not\n    //         populated in the constructor. So we must construct the set of members now.\n\n    if (this._isArray && this._arrayLength === undefined) {\n      var arrayLengthBuf = calldata.popWord();\n      var arrayLengthHex = ethUtil.bufferToHex(arrayLengthBuf);\n      var arrayLength = new configured_bignumber_1.BigNumber(arrayLengthHex, constants_1.constants.HEX_BASE);\n      _a = __read(this._createMembersWithLength(this.getDataItem(), arrayLength.toNumber()), 1), members = _a[0];\n    } // Create a new scope in the calldata, before descending into the members of this set.\n\n\n    calldata.startScope();\n    var value;\n\n    if (rules.shouldConvertStructsToObjects && !this._isArray) {\n      // Construct an object with values for each member of the set.\n      value = {};\n\n      _.each(this._memberIndexByName, function (idx, key) {\n        var member = _this._members[idx];\n        var memberValue = member.generateValue(calldata, rules);\n        value[key] = memberValue;\n      });\n    } else {\n      // Construct an array with values for each member of the set.\n      value = [];\n\n      _.each(members, function (member, idx) {\n        var memberValue = member.generateValue(calldata, rules);\n        value.push(memberValue);\n      });\n    } // Close this scope and return tetheh value.\n\n\n    calldata.endScope();\n    return value;\n  };\n\n  AbstractSetDataType.prototype.isStatic = function () {\n    // An array with an undefined length is never static.\n    if (this._isArray && this._arrayLength === undefined) {\n      return false;\n    } // If any member of the set is a pointer then the set is not static.\n\n\n    var dependentMember = _.find(this._members, function (member) {\n      return member instanceof pointer_1.AbstractPointerDataType;\n    });\n\n    var isStatic = dependentMember === undefined;\n    return isStatic;\n  };\n\n  AbstractSetDataType.prototype.getDefaultValue = function (rules) {\n    var _this = this;\n\n    var defaultValue;\n\n    if (this._isArray && this._arrayLength === undefined) {\n      defaultValue = [];\n    } else if (rules !== undefined && rules.shouldConvertStructsToObjects && !this._isArray) {\n      defaultValue = {};\n\n      _.each(this._memberIndexByName, function (idx, key) {\n        var member = _this._members[idx];\n        var memberValue = member.getDefaultValue();\n        defaultValue[key] = memberValue;\n      });\n    } else {\n      defaultValue = [];\n\n      _.each(this._members, function (member, idx) {\n        var memberValue = member.getDefaultValue();\n        defaultValue.push(memberValue);\n      });\n    }\n\n    return defaultValue;\n  };\n\n  AbstractSetDataType.prototype._generateCalldataBlockFromArray = function (value, parentBlock) {\n    var _a; // Sanity check: if the set has a defined length then `value` must have the same length.\n\n\n    if (this._arrayLength !== undefined && value.length !== this._arrayLength) {\n      throw new Error(\"Expected array of \" + JSON.stringify(this._arrayLength) + \" elements, but got array of length \" + JSON.stringify(value.length));\n    } // Create a new calldata block for this set.\n\n\n    var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n    var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName); // If this set has an undefined length then set its header to be the number of elements.\n\n    var members = this._members;\n\n    if (this._isArray && this._arrayLength === undefined) {\n      _a = __read(this._createMembersWithLength(this.getDataItem(), value.length), 1), members = _a[0];\n      var lenBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(\"0x\" + value.length.toString(constants_1.constants.HEX_BASE)), constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n      block.setHeader(lenBuf);\n    } // Create blocks for members of set.\n\n\n    var memberCalldataBlocks = [];\n\n    _.each(members, function (member, idx) {\n      var memberBlock = member.generateCalldataBlock(value[idx], block);\n      memberCalldataBlocks.push(memberBlock);\n    });\n\n    block.setMembers(memberCalldataBlocks);\n    return block;\n  };\n\n  AbstractSetDataType.prototype._generateCalldataBlockFromObject = function (obj, parentBlock) {\n    var _this = this; // Create a new calldata block for this set.\n\n\n    var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n    var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName); // Create blocks for members of set.\n\n    var memberCalldataBlocks = [];\n\n    _.forEach(this._memberIndexByName, function (memberIndex, memberName) {\n      if (!(memberName in obj)) {\n        throw new Error(\"Could not assign tuple to object: missing key '\" + memberName + \"' in object \" + JSON.stringify(obj));\n      }\n\n      var memberValue = obj[memberName];\n\n      var memberBlock = _this._members[memberIndex].generateCalldataBlock(memberValue, block);\n\n      memberCalldataBlocks.push(memberBlock);\n    }); // Associate member blocks with Set block.\n\n\n    block.setMembers(memberCalldataBlocks);\n    return block;\n  };\n\n  AbstractSetDataType.prototype._computeSignatureOfMembers = function (isDetailed) {\n    var _this = this; // Compute signature of members\n\n\n    var signature = \"(\";\n\n    _.each(this._members, function (member, i) {\n      signature += member.getSignature(isDetailed);\n\n      if (i < _this._members.length - 1) {\n        signature += ',';\n      }\n    });\n\n    signature += ')';\n    return signature;\n  };\n\n  AbstractSetDataType.prototype._createMembersWithKeys = function (dataItem) {\n    var _this = this; // Sanity check\n\n\n    if (dataItem.components === undefined) {\n      throw new Error(\"Tried to create a set using key/value pairs, but no components were defined by the input DataItem '\" + dataItem.name + \"'.\");\n    } // Create one member for each component of `dataItem`\n\n\n    var members = [];\n    var memberIndexByName = {};\n    var memberNames = [];\n\n    _.each(dataItem.components, function (memberItem) {\n      // If a component with `name` already exists then\n      // rename to `name_nameIdx` to avoid naming conflicts.\n      var memberName = memberItem.name;\n      var nameIdx = 0;\n\n      while (_.includes(memberNames, memberName) || _.isEmpty(memberName)) {\n        nameIdx++;\n        memberName = memberItem.name + \"_\" + nameIdx;\n      }\n\n      memberNames.push(memberName);\n      var childDataItem = {\n        type: memberItem.type,\n        name: dataItem.name + \".\" + memberName\n      };\n      var components = memberItem.components;\n\n      if (components !== undefined) {\n        childDataItem.components = components;\n      }\n\n      var child = _this.getFactory().create(childDataItem, _this);\n\n      memberIndexByName[memberName] = members.length;\n      members.push(child);\n    });\n\n    return [members, memberIndexByName];\n  };\n\n  AbstractSetDataType.prototype._createMembersWithLength = function (dataItem, length) {\n    var _this = this; // Create `length` members, deriving the type from `dataItem`\n\n\n    var members = [];\n    var memberIndexByName = {};\n\n    var range = _.range(length);\n\n    _.each(range, function (idx) {\n      var memberDataItem = {\n        type: _this._arrayElementType === undefined ? '' : _this._arrayElementType,\n        name: dataItem.name + \"[\" + idx.toString(constants_1.constants.DEC_BASE) + \"]\"\n      };\n      var components = dataItem.components;\n\n      if (components !== undefined) {\n        memberDataItem.components = components;\n      }\n\n      var memberType = _this.getFactory().create(memberDataItem, _this);\n\n      memberIndexByName[idx.toString(constants_1.constants.DEC_BASE)] = members.length;\n      members.push(memberType);\n    });\n\n    return [members, memberIndexByName];\n  };\n\n  return AbstractSetDataType;\n}(data_type_1.DataType);\n\nexports.AbstractSetDataType = AbstractSetDataType;","map":{"version":3,"sources":["../../../../../src/abi_encoder/abstract_data_types/types/set.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethUtil = require(\"ethereumjs-util\");\nvar _ = require(\"lodash\");\nvar configured_bignumber_1 = require(\"../../../configured_bignumber\");\nvar set_1 = require(\"../../calldata/blocks/set\");\nvar constants_1 = require(\"../../utils/constants\");\nvar data_type_1 = require(\"../data_type\");\nvar pointer_1 = require(\"./pointer\");\nvar AbstractSetDataType = /** @class */ (function (_super) {\n    __extends(AbstractSetDataType, _super);\n    function AbstractSetDataType(dataItem, factory, isArray, arrayLength, arrayElementType) {\n        var _a, _b;\n        if (isArray === void 0) { isArray = false; }\n        var _this = _super.call(this, dataItem, factory) || this;\n        _this._memberIndexByName = {};\n        _this._members = [];\n        _this._isArray = isArray;\n        _this._arrayLength = arrayLength;\n        _this._arrayElementType = arrayElementType;\n        if (isArray && arrayLength !== undefined) {\n            _a = __read(_this._createMembersWithLength(dataItem, arrayLength), 2), _this._members = _a[0], _this._memberIndexByName = _a[1];\n        }\n        else if (!isArray) {\n            _b = __read(_this._createMembersWithKeys(dataItem), 2), _this._members = _b[0], _this._memberIndexByName = _b[1];\n        }\n        return _this;\n    }\n    AbstractSetDataType.prototype.generateCalldataBlock = function (value, parentBlock) {\n        var block = value instanceof Array\n            ? this._generateCalldataBlockFromArray(value, parentBlock)\n            : this._generateCalldataBlockFromObject(value, parentBlock);\n        return block;\n    };\n    AbstractSetDataType.prototype.generateValue = function (calldata, rules) {\n        var _this = this;\n        var _a;\n        var members = this._members;\n        // Case 1: This is an array of undefined length, which means that `this._members` was not\n        //         populated in the constructor. So we must construct the set of members now.\n        if (this._isArray && this._arrayLength === undefined) {\n            var arrayLengthBuf = calldata.popWord();\n            var arrayLengthHex = ethUtil.bufferToHex(arrayLengthBuf);\n            var arrayLength = new configured_bignumber_1.BigNumber(arrayLengthHex, constants_1.constants.HEX_BASE);\n            _a = __read(this._createMembersWithLength(this.getDataItem(), arrayLength.toNumber()), 1), members = _a[0];\n        }\n        // Create a new scope in the calldata, before descending into the members of this set.\n        calldata.startScope();\n        var value;\n        if (rules.shouldConvertStructsToObjects && !this._isArray) {\n            // Construct an object with values for each member of the set.\n            value = {};\n            _.each(this._memberIndexByName, function (idx, key) {\n                var member = _this._members[idx];\n                var memberValue = member.generateValue(calldata, rules);\n                value[key] = memberValue;\n            });\n        }\n        else {\n            // Construct an array with values for each member of the set.\n            value = [];\n            _.each(members, function (member, idx) {\n                var memberValue = member.generateValue(calldata, rules);\n                value.push(memberValue);\n            });\n        }\n        // Close this scope and return tetheh value.\n        calldata.endScope();\n        return value;\n    };\n    AbstractSetDataType.prototype.isStatic = function () {\n        // An array with an undefined length is never static.\n        if (this._isArray && this._arrayLength === undefined) {\n            return false;\n        }\n        // If any member of the set is a pointer then the set is not static.\n        var dependentMember = _.find(this._members, function (member) {\n            return member instanceof pointer_1.AbstractPointerDataType;\n        });\n        var isStatic = dependentMember === undefined;\n        return isStatic;\n    };\n    AbstractSetDataType.prototype.getDefaultValue = function (rules) {\n        var _this = this;\n        var defaultValue;\n        if (this._isArray && this._arrayLength === undefined) {\n            defaultValue = [];\n        }\n        else if (rules !== undefined && rules.shouldConvertStructsToObjects && !this._isArray) {\n            defaultValue = {};\n            _.each(this._memberIndexByName, function (idx, key) {\n                var member = _this._members[idx];\n                var memberValue = member.getDefaultValue();\n                defaultValue[key] = memberValue;\n            });\n        }\n        else {\n            defaultValue = [];\n            _.each(this._members, function (member, idx) {\n                var memberValue = member.getDefaultValue();\n                defaultValue.push(memberValue);\n            });\n        }\n        return defaultValue;\n    };\n    AbstractSetDataType.prototype._generateCalldataBlockFromArray = function (value, parentBlock) {\n        var _a;\n        // Sanity check: if the set has a defined length then `value` must have the same length.\n        if (this._arrayLength !== undefined && value.length !== this._arrayLength) {\n            throw new Error(\"Expected array of \" + JSON.stringify(this._arrayLength) + \" elements, but got array of length \" + JSON.stringify(value.length));\n        }\n        // Create a new calldata block for this set.\n        var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n        // If this set has an undefined length then set its header to be the number of elements.\n        var members = this._members;\n        if (this._isArray && this._arrayLength === undefined) {\n            _a = __read(this._createMembersWithLength(this.getDataItem(), value.length), 1), members = _a[0];\n            var lenBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(\"0x\" + value.length.toString(constants_1.constants.HEX_BASE)), constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n            block.setHeader(lenBuf);\n        }\n        // Create blocks for members of set.\n        var memberCalldataBlocks = [];\n        _.each(members, function (member, idx) {\n            var memberBlock = member.generateCalldataBlock(value[idx], block);\n            memberCalldataBlocks.push(memberBlock);\n        });\n        block.setMembers(memberCalldataBlocks);\n        return block;\n    };\n    AbstractSetDataType.prototype._generateCalldataBlockFromObject = function (obj, parentBlock) {\n        var _this = this;\n        // Create a new calldata block for this set.\n        var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n        // Create blocks for members of set.\n        var memberCalldataBlocks = [];\n        _.forEach(this._memberIndexByName, function (memberIndex, memberName) {\n            if (!(memberName in obj)) {\n                throw new Error(\"Could not assign tuple to object: missing key '\" + memberName + \"' in object \" + JSON.stringify(obj));\n            }\n            var memberValue = obj[memberName];\n            var memberBlock = _this._members[memberIndex].generateCalldataBlock(memberValue, block);\n            memberCalldataBlocks.push(memberBlock);\n        });\n        // Associate member blocks with Set block.\n        block.setMembers(memberCalldataBlocks);\n        return block;\n    };\n    AbstractSetDataType.prototype._computeSignatureOfMembers = function (isDetailed) {\n        var _this = this;\n        // Compute signature of members\n        var signature = \"(\";\n        _.each(this._members, function (member, i) {\n            signature += member.getSignature(isDetailed);\n            if (i < _this._members.length - 1) {\n                signature += ',';\n            }\n        });\n        signature += ')';\n        return signature;\n    };\n    AbstractSetDataType.prototype._createMembersWithKeys = function (dataItem) {\n        var _this = this;\n        // Sanity check\n        if (dataItem.components === undefined) {\n            throw new Error(\"Tried to create a set using key/value pairs, but no components were defined by the input DataItem '\" + dataItem.name + \"'.\");\n        }\n        // Create one member for each component of `dataItem`\n        var members = [];\n        var memberIndexByName = {};\n        var memberNames = [];\n        _.each(dataItem.components, function (memberItem) {\n            // If a component with `name` already exists then\n            // rename to `name_nameIdx` to avoid naming conflicts.\n            var memberName = memberItem.name;\n            var nameIdx = 0;\n            while (_.includes(memberNames, memberName) || _.isEmpty(memberName)) {\n                nameIdx++;\n                memberName = memberItem.name + \"_\" + nameIdx;\n            }\n            memberNames.push(memberName);\n            var childDataItem = {\n                type: memberItem.type,\n                name: dataItem.name + \".\" + memberName,\n            };\n            var components = memberItem.components;\n            if (components !== undefined) {\n                childDataItem.components = components;\n            }\n            var child = _this.getFactory().create(childDataItem, _this);\n            memberIndexByName[memberName] = members.length;\n            members.push(child);\n        });\n        return [members, memberIndexByName];\n    };\n    AbstractSetDataType.prototype._createMembersWithLength = function (dataItem, length) {\n        var _this = this;\n        // Create `length` members, deriving the type from `dataItem`\n        var members = [];\n        var memberIndexByName = {};\n        var range = _.range(length);\n        _.each(range, function (idx) {\n            var memberDataItem = {\n                type: _this._arrayElementType === undefined ? '' : _this._arrayElementType,\n                name: dataItem.name + \"[\" + idx.toString(constants_1.constants.DEC_BASE) + \"]\",\n            };\n            var components = dataItem.components;\n            if (components !== undefined) {\n                memberDataItem.components = components;\n            }\n            var memberType = _this.getFactory().create(memberDataItem, _this);\n            memberIndexByName[idx.toString(constants_1.constants.DEC_BASE)] = members.length;\n            members.push(memberType);\n        });\n        return [members, memberIndexByName];\n    };\n    return AbstractSetDataType;\n}(data_type_1.DataType));\nexports.AbstractSetDataType = AbstractSetDataType;\n//# sourceMappingURL=set.js.map"]},"metadata":{},"sourceType":"script"}