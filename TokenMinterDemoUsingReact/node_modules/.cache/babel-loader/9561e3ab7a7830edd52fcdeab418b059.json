{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // copied from https://github.com/0xProject/0x-monorepo/pull/1431\n\nvar assert_1 = require(\"@0x/assert\");\n\nvar utils_1 = require(\"@0x/utils\");\n\nvar EthereumTx = require(\"ethereumjs-tx\");\n\nvar _ = __importStar(require(\"lodash\"));\n\nvar HDNode = require(\"hdkey\");\n\nvar types_1 = require(\"@0x/subproviders/lib/src/types\");\n\nvar wallet_utils_1 = require(\"@0x/subproviders/lib/src/utils/wallet_utils\");\n\nvar base_wallet_subprovider_1 = require(\"@0x/subproviders/lib/src/subproviders/base_wallet_subprovider\");\n\nvar PRIVATE_KEY_PATH = \"44'/60'/0'/0\";\nvar DEFAULT_NUM_ADDRESSES_TO_FETCH = 10;\nvar DEFAULT_ADDRESS_SEARCH_LIMIT = 1000;\n\nvar TrezorSubprovider =\n/** @class */\nfunction (_super) {\n  __extends(TrezorSubprovider, _super);\n  /**\n   * Instantiates a TrezorSubprovider. Defaults to private key path set to `44'/60'/0'/0/`.\n   * Must be initialized with trezor-connect API module https://github.com/trezor/connect.\n   * @param TrezorSubprovider config object containing trezor-connect API\n   * @return TrezorSubprovider instance\n   */\n\n\n  function TrezorSubprovider(config) {\n    var _this = _super.call(this) || this;\n\n    _this._privateKeyPath = PRIVATE_KEY_PATH;\n    _this._trezorConnectClientApi = config.trezorConnectClientApi;\n    _this._networkId = config.networkId;\n\n    var _addressSearchLimit = !_.isUndefined(config.accountFetchingConfigs) && !_.isUndefined(config.accountFetchingConfigs.addressSearchLimit) && config.accountFetchingConfigs.addressSearchLimit;\n\n    _this._addressSearchLimit = _addressSearchLimit || DEFAULT_ADDRESS_SEARCH_LIMIT;\n    return _this;\n  }\n  /**\n   * Retrieve a users Trezor account. This method is automatically called\n   * when issuing a `eth_accounts` JSON RPC request via your providerEngine\n   * instance.\n   * @return An array of accounts\n   */\n\n\n  TrezorSubprovider.prototype.getAccountsAsync = function (numberOfAccounts) {\n    if (numberOfAccounts === void 0) {\n      numberOfAccounts = DEFAULT_NUM_ADDRESSES_TO_FETCH;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var initialDerivedKeyInfo, derivedKeyInfos, accounts;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._initialDerivedKeyInfoAsync()];\n\n          case 1:\n            initialDerivedKeyInfo = _a.sent();\n            derivedKeyInfos = wallet_utils_1.walletUtils.calculateDerivedHDKeyInfos(initialDerivedKeyInfo, numberOfAccounts);\n            accounts = _.map(derivedKeyInfos, function (k) {\n              return k.address;\n            });\n            return [2\n            /*return*/\n            , accounts];\n        }\n      });\n    });\n  };\n  /**\n   * Signs a transaction on the Trezor with the account specificed by the `from` field in txParams.\n   * If you've added the TrezorSubprovider to your app's provider, you can simply send an `eth_sendTransaction`\n   * JSON RPC request, and this method will be called auto-magically. If you are not using this via a ProviderEngine\n   * instance, you can call it directly.\n   * @param txParams Parameters of the transaction to sign\n   * @return Signed transaction hex string\n   */\n\n\n  TrezorSubprovider.prototype.signTransactionAsync = function (txData) {\n    return __awaiter(this, void 0, void 0, function () {\n      var initialDerivedKeyInfo, derivedKeyInfo, fullDerivationPath, response, payload, tx, vIndex, rIndex, sIndex, payload;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (_.isUndefined(txData.from) || !utils_1.addressUtils.isAddress(txData.from)) {\n              throw new Error(types_1.WalletSubproviderErrors.FromAddressMissingOrInvalid);\n            }\n\n            txData.value = txData.value ? txData.value : '0x0';\n            txData.data = txData.data ? txData.data : '0x';\n            txData.gas = txData.gas ? txData.gas : '0x0';\n            txData.gasPrice = txData.gasPrice ? txData.gasPrice : '0x0';\n            return [4\n            /*yield*/\n            , this._initialDerivedKeyInfoAsync()];\n\n          case 1:\n            initialDerivedKeyInfo = _a.sent();\n            derivedKeyInfo = this._findDerivedKeyInfoForAddress(initialDerivedKeyInfo, txData.from);\n            fullDerivationPath = derivedKeyInfo.derivationPath;\n            return [4\n            /*yield*/\n            , this._trezorConnectClientApi.ethereumSignTransaction({\n              path: fullDerivationPath,\n              transaction: {\n                to: txData.to,\n                value: txData.value,\n                data: txData.data,\n                chainId: this._networkId,\n                nonce: txData.nonce,\n                gasLimit: txData.gas,\n                gasPrice: txData.gasPrice\n              }\n            })];\n\n          case 2:\n            response = _a.sent();\n\n            if (response.success) {\n              payload = response.payload;\n              tx = new EthereumTx(txData);\n              vIndex = 6; // eslint-disable-next-line\n\n              tx.raw[vIndex] = Buffer.from([1]); // v\n\n              rIndex = 7; // eslint-disable-next-line\n\n              tx.raw[rIndex] = Buffer.from([]); // r\n\n              sIndex = 8; // eslint-disable-next-line\n\n              tx.raw[sIndex] = Buffer.from([]); // s\n              // slice off leading 0x\n              // eslint-disable-next-line\n\n              tx.v = Buffer.from(payload.v.slice(2), 'hex'); // eslint-disable-next-line\n\n              tx.r = Buffer.from(payload.r.slice(2), 'hex'); // eslint-disable-next-line\n\n              tx.s = Buffer.from(payload.s.slice(2), 'hex');\n              return [2\n              /*return*/\n              , \"0x\" + tx.serialize().toString('hex')];\n            } else {\n              payload = response.payload;\n              throw new Error(payload.error);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Sign a personal Ethereum signed message. The signing account will be the account\n   * associated with the provided address. If you've added the TrezorSubprovider to\n   * your app's provider, you can simply send an `eth_sign` or `personal_sign` JSON RPC\n   * request, and this method will be called auto-magically.\n   * If you are not using this via a ProviderEngine instance, you can call it directly.\n   * @param data Hex string message to sign\n   * @param address Address of the account to sign with\n   * @return Signature hex string (order: rsv)\n   */\n\n\n  TrezorSubprovider.prototype.signPersonalMessageAsync = function (data, address) {\n    return __awaiter(this, void 0, void 0, function () {\n      var initialDerivedKeyInfo, derivedKeyInfo, fullDerivationPath, response, payload, payload;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (_.isUndefined(data)) {\n              throw new Error(types_1.WalletSubproviderErrors.DataMissingForSignPersonalMessage);\n            }\n\n            assert_1.assert.isHexString('data', data);\n            assert_1.assert.isETHAddressHex('address', address);\n            return [4\n            /*yield*/\n            , this._initialDerivedKeyInfoAsync()];\n\n          case 1:\n            initialDerivedKeyInfo = _a.sent();\n            derivedKeyInfo = this._findDerivedKeyInfoForAddress(initialDerivedKeyInfo, address);\n            fullDerivationPath = derivedKeyInfo.derivationPath;\n            return [4\n            /*yield*/\n            , this._trezorConnectClientApi.ethereumSignMessage({\n              path: fullDerivationPath,\n              message: data,\n              hex: false\n            })];\n\n          case 2:\n            response = _a.sent();\n\n            if (response.success) {\n              payload = response.payload;\n              return [2\n              /*return*/\n              , \"0x\" + payload.signature];\n            } else {\n              payload = response.payload;\n              throw new Error(payload.error);\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * TODO:: eth_signTypedData is currently not supported on Trezor devices.\n   * @param address Address of the account to sign with\n   * @param data the typed data object\n   * @return Signature hex string (order: rsv)\n   */\n\n\n  TrezorSubprovider.prototype.signTypedDataAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        throw new Error(types_1.WalletSubproviderErrors.MethodNotSupported);\n      });\n    });\n  };\n\n  TrezorSubprovider.prototype._initialDerivedKeyInfoAsync = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var parentKeyDerivationPath, response, payload, hdKey, address, initialDerivedKeyInfo, payload;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._initialDerivedKeyInfo) return [3\n            /*break*/\n            , 1];\n            return [2\n            /*return*/\n            , this._initialDerivedKeyInfo];\n\n          case 1:\n            parentKeyDerivationPath = \"m/\" + this._privateKeyPath;\n            return [4\n            /*yield*/\n            , this._trezorConnectClientApi.getPublicKey({\n              path: parentKeyDerivationPath\n            })];\n\n          case 2:\n            response = _a.sent();\n\n            if (response.success) {\n              payload = response.payload;\n              hdKey = new HDNode(); // eslint-disable-next-line\n\n              hdKey.publicKey = new Buffer(payload.publicKey, 'hex'); // eslint-disable-next-line\n\n              hdKey.chainCode = new Buffer(payload.chainCode, 'hex');\n              address = wallet_utils_1.walletUtils.addressOfHDKey(hdKey);\n              initialDerivedKeyInfo = {\n                hdKey: hdKey,\n                address: address,\n                derivationPath: parentKeyDerivationPath,\n                baseDerivationPath: this._privateKeyPath\n              };\n              this._initialDerivedKeyInfo = initialDerivedKeyInfo;\n              return [2\n              /*return*/\n              , initialDerivedKeyInfo];\n            } else {\n              payload = response.payload;\n              throw new Error(payload.error);\n            }\n\n            _a.label = 3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  TrezorSubprovider.prototype._findDerivedKeyInfoForAddress = function (initalHDKey, address) {\n    var matchedDerivedKeyInfo = wallet_utils_1.walletUtils.findDerivedKeyInfoForAddressIfExists(address, initalHDKey, this._addressSearchLimit);\n\n    if (_.isUndefined(matchedDerivedKeyInfo) || matchedDerivedKeyInfo === undefined) {\n      throw new Error(types_1.WalletSubproviderErrors.AddressNotFound + \": \" + address);\n    }\n\n    return matchedDerivedKeyInfo;\n  };\n\n  return TrezorSubprovider;\n}(base_wallet_subprovider_1.BaseWalletSubprovider);\n\nexports.default = TrezorSubprovider;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAgDA;;AACA;;AAEA;;AAEA,IAAMA,gBAAgB,GAAG,cAAzB;AACA,IAAMC,8BAA8B,GAAG,EAAvC;AACA,IAAMC,4BAA4B,GAAG,IAArC;;AAEA;AAAA;AAAA;EAA+CC;EAM7C;;;;;;;;EAMA,2BAAmBC,MAAnB,EAAkD;IAAlD,YACEC,qBAAO,IADT;;IAEEC,KAAI,CAACC,eAAL,GAAuBP,gBAAvB;IACAM,KAAI,CAACE,uBAAL,GAA+BJ,MAAM,CAACK,sBAAtC;IACAH,KAAI,CAACI,UAAL,GAAkBN,MAAM,CAACO,SAAzB;;IACA,IAAMC,mBAAmB,GACvB,CAACC,CAAC,CAACC,WAAF,CAAcV,MAAM,CAACW,sBAArB,CAAD,IACA,CAACF,CAAC,CAACC,WAAF,CAAcV,MAAM,CAACW,sBAAP,CAA8BC,kBAA5C,CADD,IAEAZ,MAAM,CAACW,sBAAP,CAA8BC,kBAHhC;;IAIAV,KAAI,CAACM,mBAAL,GAA2BA,mBAAmB,IAAIV,4BAAlD;;EACD;EACD;;;;;;;;EAMae,+CAAb,UAA8BC,gBAA9B,EAAuF;IAAzD;MAAAA;IAAyD;;;;;;;YACvD;YAAA;YAAA,EAAM,KAAKC,2BAAL,EAAN;;;YAAxBC,qBAAqB,GAAGC,SAAxB;YACAC,eAAe,GAAGC,2BAAYC,0BAAZ,CAAuCJ,qBAAvC,EAA8DF,gBAA9D,CAAlB;YACAO,QAAQ,GAAGZ,CAAC,CAACa,GAAF,CAAMJ,eAAN,EAAuB,UAACK,CAAD,EAAO;cAAU,QAAC,CAACC,OAAF;YAAS,CAAjD,CAAX;YACN;YAAA;YAAA,EAAOH,QAAP;;;;EACD,CALY;EAMb;;;;;;;;;;EAQaR,mDAAb,UAAkCY,MAAlC,EAAyD;;;;;;YACvD,IAAIhB,CAAC,CAACC,WAAF,CAAce,MAAM,CAACC,IAArB,KAA8B,CAACC,qBAAaC,SAAb,CAAuBH,MAAM,CAACC,IAA9B,CAAnC,EAAwE;cACtE,MAAM,IAAIG,KAAJ,CAAUC,gCAAwBC,2BAAlC,CAAN;YACD;;YACDN,MAAM,CAACO,KAAP,GAAeP,MAAM,CAACO,KAAP,GAAeP,MAAM,CAACO,KAAtB,GAA8B,KAA7C;YACAP,MAAM,CAACQ,IAAP,GAAcR,MAAM,CAACQ,IAAP,GAAcR,MAAM,CAACQ,IAArB,GAA4B,IAA1C;YACAR,MAAM,CAACS,GAAP,GAAaT,MAAM,CAACS,GAAP,GAAaT,MAAM,CAACS,GAApB,GAA0B,KAAvC;YACAT,MAAM,CAACU,QAAP,GAAkBV,MAAM,CAACU,QAAP,GAAkBV,MAAM,CAACU,QAAzB,GAAoC,KAAtD;YAE8B;YAAA;YAAA,EAAM,KAAKpB,2BAAL,EAAN;;;YAAxBC,qBAAqB,GAAGC,SAAxB;YACAmB,cAAc,GAAG,KAAKC,6BAAL,CAAmCrB,qBAAnC,EAA0DS,MAAM,CAACC,IAAjE,CAAjB;YACAY,kBAAkB,GAAGF,cAAc,CAACG,cAApC;YAEkC;YAAA;YAAA,EAAM,KAAKnC,uBAAL,CAA6BoC,uBAA7B,CAAqD;cACjGC,IAAI,EAAEH,kBAD2F;cAEjGI,WAAW,EAAE;gBACXC,EAAE,EAAElB,MAAM,CAACkB,EADA;gBAEXX,KAAK,EAAEP,MAAM,CAACO,KAFH;gBAGXC,IAAI,EAAER,MAAM,CAACQ,IAHF;gBAIXW,OAAO,EAAE,KAAKtC,UAJH;gBAKXuC,KAAK,EAAEpB,MAAM,CAACoB,KALH;gBAMXC,QAAQ,EAAErB,MAAM,CAACS,GANN;gBAOXC,QAAQ,EAAEV,MAAM,CAACU;cAPN;YAFoF,CAArD,CAAN;;;YAAlCY,QAAQ,GAA0B9B,SAAlC;;YAaN,IAAI8B,QAAQ,CAACC,OAAb,EAAsB;cACdC,OAAO,GAAgCF,QAAQ,CAACE,OAAhD;cACAC,EAAE,GAAG,IAAIC,UAAJ,CAAe1B,MAAf,CAAL;cAGA2B,MAAM,GAAG,CAAT,CALc,CAMpB;;cACAF,EAAE,CAACG,GAAH,CAAOD,MAAP,IAAiBE,MAAM,CAAC5B,IAAP,CAAY,CAAC,CAAD,CAAZ,CAAjB,CAPoB,CAOc;;cAC5B6B,MAAM,GAAG,CAAT,CARc,CASpB;;cACAL,EAAE,CAACG,GAAH,CAAOE,MAAP,IAAiBD,MAAM,CAAC5B,IAAP,CAAY,EAAZ,CAAjB,CAVoB,CAUa;;cAC3B8B,MAAM,GAAG,CAAT,CAXc,CAYpB;;cACAN,EAAE,CAACG,GAAH,CAAOG,MAAP,IAAiBF,MAAM,CAAC5B,IAAP,CAAY,EAAZ,CAAjB,CAboB,CAaa;cAEjC;cACA;;cACAwB,EAAE,CAACO,CAAH,GAAOH,MAAM,CAAC5B,IAAP,CAAYuB,OAAO,CAACQ,CAAR,CAAUC,KAAV,CAAgB,CAAhB,CAAZ,EAAgC,KAAhC,CAAP,CAjBoB,CAkBpB;;cACAR,EAAE,CAACS,CAAH,GAAOL,MAAM,CAAC5B,IAAP,CAAYuB,OAAO,CAACU,CAAR,CAAUD,KAAV,CAAgB,CAAhB,CAAZ,EAAgC,KAAhC,CAAP,CAnBoB,CAoBpB;;cACAR,EAAE,CAACU,CAAH,GAAON,MAAM,CAAC5B,IAAP,CAAYuB,OAAO,CAACW,CAAR,CAAUF,KAAV,CAAgB,CAAhB,CAAZ,EAAgC,KAAhC,CAAP;cAEA;cAAA;cAAA,EAAO,OAAKR,EAAE,CAACW,SAAH,GAAeC,QAAf,CAAwB,KAAxB,CAAZ;YACD,CAxBD,MAwBO;cACCb,OAAO,GAA+BF,QAAQ,CAACE,OAA/C;cACN,MAAM,IAAIpB,KAAJ,CAAUoB,OAAO,CAACc,KAAlB,CAAN;YACD;;;;;;;;EACF,CAtDY;EAuDb;;;;;;;;;;;;EAUalD,uDAAb,UAAsCoB,IAAtC,EAAoDT,OAApD,EAAmE;;;;;;YACjE,IAAIf,CAAC,CAACC,WAAF,CAAcuB,IAAd,CAAJ,EAAyB;cACvB,MAAM,IAAIJ,KAAJ,CAAUC,gCAAwBkC,iCAAlC,CAAN;YACD;;YACDC,gBAAOC,WAAP,CAAmB,MAAnB,EAA2BjC,IAA3B;YACAgC,gBAAOE,eAAP,CAAuB,SAAvB,EAAkC3C,OAAlC;YAE8B;YAAA;YAAA,EAAM,KAAKT,2BAAL,EAAN;;;YAAxBC,qBAAqB,GAAGC,SAAxB;YACAmB,cAAc,GAAG,KAAKC,6BAAL,CAAmCrB,qBAAnC,EAA0DQ,OAA1D,CAAjB;YACAc,kBAAkB,GAAGF,cAAc,CAACG,cAApC;YAEkC;YAAA;YAAA,EAAM,KAAKnC,uBAAL,CAA6BgE,mBAA7B,CAAiD;cAC7F3B,IAAI,EAAEH,kBADuF;cAE7F+B,OAAO,EAAEpC,IAFoF;cAG7FqC,GAAG,EAAE;YAHwF,CAAjD,CAAN;;;YAAlCvB,QAAQ,GAA0B9B,SAAlC;;YAMN,IAAI8B,QAAQ,CAACC,OAAb,EAAsB;cACdC,OAAO,GAAiCF,QAAQ,CAACE,OAAjD;cACN;cAAA;cAAA,EAAO,OAAKA,OAAO,CAACsB,SAApB;YACD,CAHD,MAGO;cACCtB,OAAO,GAA+BF,QAAQ,CAACE,OAA/C;cACN,MAAM,IAAIpB,KAAJ,CAAUoB,OAAO,CAACc,KAAlB,CAAN;YACD;;;;;;;;EACF,CAxBY;EAyBb;;;;;;;;EAMalD,iDAAb;;;QACE,MAAM,IAAIgB,KAAJ,CAAUC,gCAAwB0C,kBAAlC,CAAN;;;EACD,CAFY;;EAGC3D,0DAAd;;;;;;iBACM,KAAK4D,wBAAL;YAAA;YAAA;YACF;YAAA;YAAA,EAAO,KAAKA,sBAAZ;;;YAEMC,uBAAuB,GAAG,OAAK,KAAKvE,eAApC;YAEkC;YAAA;YAAA,EAAM,KAAKC,uBAAL,CAA6BuE,YAA7B,CAA0C;cACtFlC,IAAI,EAAEiC;YADgF,CAA1C,CAAN;;;YAAlC3B,QAAQ,GAA0B9B,SAAlC;;YAIN,IAAI8B,QAAQ,CAACC,OAAb,EAAsB;cACdC,OAAO,GAAsCF,QAAQ,CAACE,OAAtD;cACA2B,KAAK,GAAG,IAAIC,MAAJ,EAAR,CAFc,CAGpB;;cACAD,KAAK,CAACE,SAAN,GAAkB,IAAIxB,MAAJ,CAAWL,OAAO,CAAC6B,SAAnB,EAA8B,KAA9B,CAAlB,CAJoB,CAKpB;;cACAF,KAAK,CAACG,SAAN,GAAkB,IAAIzB,MAAJ,CAAWL,OAAO,CAAC8B,SAAnB,EAA8B,KAA9B,CAAlB;cACMvD,OAAO,GAAGL,2BAAY6D,cAAZ,CAA2BJ,KAA3B,CAAV;cACA5D,qBAAqB,GAAG;gBAC5B4D,KAAK,OADuB;gBAE5BpD,OAAO,SAFqB;gBAG5Be,cAAc,EAAEmC,uBAHY;gBAI5BO,kBAAkB,EAAE,KAAK9E;cAJG,CAAxB;cAMN,KAAKsE,sBAAL,GAA8BzD,qBAA9B;cACA;cAAA;cAAA,EAAOA,qBAAP;YACD,CAhBD,MAgBO;cACCiC,OAAO,GAA+BF,QAAQ,CAACE,OAA/C;cACN,MAAM,IAAIpB,KAAJ,CAAUoB,OAAO,CAACc,KAAlB,CAAN;YACD;;;;;;;;;;;EAEJ,CA/Ba;;EAgCNlD,4DAAR,UAAsCqE,WAAtC,EAAqE1D,OAArE,EAAoF;IAClF,IAAM2D,qBAAqB,GAAGhE,2BAAYiE,oCAAZ,CAC5B5D,OAD4B,EAE5B0D,WAF4B,EAG5B,KAAK1E,mBAHuB,CAA9B;;IAKA,IAAIC,CAAC,CAACC,WAAF,CAAcyE,qBAAd,KAAwCA,qBAAqB,KAAKE,SAAtE,EAAiF;MAC/E,MAAM,IAAIxD,KAAJ,CAAaC,gCAAwBwD,eAAxB,GAAuC,IAAvC,GAA4C9D,OAAzD,CAAN;IACD;;IACD,OAAO2D,qBAAP;EACD,CAVO;;EAWV;AAAC,CAzLD,CAA+CI,+CAA/C","names":["PRIVATE_KEY_PATH","DEFAULT_NUM_ADDRESSES_TO_FETCH","DEFAULT_ADDRESS_SEARCH_LIMIT","__extends","config","_super","_this","_privateKeyPath","_trezorConnectClientApi","trezorConnectClientApi","_networkId","networkId","_addressSearchLimit","_","isUndefined","accountFetchingConfigs","addressSearchLimit","TrezorSubprovider","numberOfAccounts","_initialDerivedKeyInfoAsync","initialDerivedKeyInfo","_a","derivedKeyInfos","wallet_utils_1","calculateDerivedHDKeyInfos","accounts","map","k","address","txData","from","utils_1","isAddress","Error","types_1","FromAddressMissingOrInvalid","value","data","gas","gasPrice","derivedKeyInfo","_findDerivedKeyInfoForAddress","fullDerivationPath","derivationPath","ethereumSignTransaction","path","transaction","to","chainId","nonce","gasLimit","response","success","payload","tx","EthereumTx","vIndex","raw","Buffer","rIndex","sIndex","v","slice","r","s","serialize","toString","error","DataMissingForSignPersonalMessage","assert_1","isHexString","isETHAddressHex","ethereumSignMessage","message","hex","signature","MethodNotSupported","_initialDerivedKeyInfo","parentKeyDerivationPath","getPublicKey","hdKey","HDNode","publicKey","chainCode","addressOfHDKey","baseDerivationPath","initalHDKey","matchedDerivedKeyInfo","findDerivedKeyInfoForAddressIfExists","undefined","AddressNotFound","base_wallet_subprovider_1"],"sources":["../../../src/connectors/trezor/subprovider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}